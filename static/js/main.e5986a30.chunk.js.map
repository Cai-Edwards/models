{"version":3,"sources":["projects/orbits/orbits.js","projects/orbits/orbits.jsx","projects/quadtree/quadtree.js","projects/maze/main.js","projects/quadtree/quadtree.jsx","projects/maze/classes.js","projects/maze/maze.jsx","projects/sorting/sorting.js","projects/sorting/sorting.jsx","projects/collsions/collisions.jsx","projects/chisquared/pvalue.js","projects/chisquared/chisquared.jsx","projects/chisquared/chisquared.js","Main.jsx","index.js"],"names":["c","ctx","stop","interval","now","then","elapsed","width","height","originx","originy","system","trail","fill","show_text","largest_mass","fpsmin","fpsmax","step","Body","mass","position","velocity","color","G","this","other","disp","displacement","magnitude","direction","bodies","final","forEach","e","f","force","length","shift","temp","push","randrange","lower","upper","Math","random","update_values","t","time","click","text","addEventListener","handle_down","handle_up","removeEventListener","clientX","clientY","vel","draw_body","beginPath","arc","floor","log10","calculate_radius","PI","closePath","draw","requestAnimationFrame","Date","clearRect","round","font","strokeStyle","fillText","toString","draw_text","globalAlpha","apply","total","update","fillStyle","lineWidth","moveTo","i","xc","yc","quadraticCurveTo","n","stroke","draw_approx_trail","k","lineTo","draw_exact_trail","boundary","tree","Orbits","props","state","num","handleChange","bind","handleCheckboxChange","handleReset","handleClear","handleRender","document","getElementById","getContext","setState","target","name","value","reset","checked","id","window","innerWidth","innerHeight","onClick","type","onChange","React","Component","Quadtree","capacity","points","divided","point","contains","divide","ne","insert","nw","se","sw","x","y","w","h","Rect","rect","p","Point","r","add_point","maze","pixel_width","pixel_height","canvas_height","canvas_width","rows","columns","speed","skip","frontier","possible_nodes","path","current_position","init","Maze","nodes","generate","row","column","Node","current","connections","current_node","visited","travel_cost","shortest_found","in_list","previous_node","total_cost","Infinity","node","option","generate_maze","connect","end","check_in","val","arr","depth_first","a","current_path","connection","connecting_walls","options","choice","remove_wall","pop","prims","index","splice","astar","done","end_node","trace","unshift","g","abs","cost","shortest","newnode","Promise","resolve","setTimeout","prev","coord","wall","bar_width","handleUpdate","_rows","_columns","_speed","_step","_skip","low","high","randomise","bubble_sort","swap","selection_sort","maxidx","j","Sorting","s","parseInt","normal__x","z","z2","exp","sqrt","p_nor","normaldist","q_chi2","df","chi2","chi","ChiSquared","inputs","values","lookup","horizontal","horizontalv","vertical","verticalv","sumh","sumv","freq","enough","warning","sig","renderTable","dataChange","renderData","renderHeader","headerChange","renderLeft","leftChange","footerSum","totalUpdate","expectedBody","expectedHeader","hv","zv","hn","zn","forceUpdate","v","l","parseFloat","expected","frac","col","expected_frequencies","b","sum","o","cont","console","log","chi_sq","reduce","map","inp","pos","placeholder","data","key","min","className","toFixed","en","war","result","max","Main","basename","exact","class","to","ReactDOM","render"],"mappings":"+MAAIA,EAAGC,EAAKC,EAAMC,EAAUC,EAAKC,EAAMC,EAASC,EAAOC,EAAQC,EAASC,E,4GACpEC,EAAS,GACTC,EAAQ,OACRC,GAAO,EACPC,GAAY,EAEZC,EAAe,EAGfC,EAAS,IACTC,EAAS,EAETC,EAAO,EAELC,E,WAIF,WAAYC,EAAMC,EAAUC,EAAUC,GAAQ,yBAF9CC,EAAI,SAGAC,KAAKL,KAAOA,EACZK,KAAKJ,SAAWA,EAChBI,KAAKH,SAAWA,EAChBG,KAAKb,MAAQ,GACba,KAAKF,MAAQA,EAEbR,EAAeA,EAAeK,EAAOA,EAAOL,E,yDAGnCW,GACT,OAAO,KAAP,IAAQ,SAACA,EAAML,SAAS,GAAKI,KAAKJ,SAAS,GAAO,GAA1C,SAA+CK,EAAML,SAAS,GAAKI,KAAKJ,SAAS,GAAO,GAAM,M,4BAGpGK,GACF,IAAIC,EAAOF,KAAKG,aAAaF,GACzBG,EAAYJ,KAAKD,GAAME,EAAMN,KAAOK,KAAKL,KAAnB,SAA2BO,EAAQ,IACzDG,EAAY,EAAEJ,EAAML,SAAS,GAAKI,KAAKJ,SAAS,IAAMM,GAAOD,EAAML,SAAS,GAAKI,KAAKJ,SAAS,IAAMM,GAEzG,MAAO,CAACE,EAAYC,EAAU,GAAID,EAAYC,EAAU,M,4BAGtDC,GAAS,IAAD,OACNC,EAAQ,CAAC,EAAG,GAUhB,OARAD,EAAOE,SAAQ,SAAAC,GACX,GAAIA,IAAM,EAAM,CACZ,IAAIC,EAAI,EAAKC,MAAMF,GACnBF,EAAM,IAAMG,EAAE,GACdH,EAAM,IAAMG,EAAE,OAIfH,I,4BAGLI,GACFX,KAAKH,SAAS,IAAMG,KAAKH,SAAS,GAAKG,KAAKL,KAAOgB,EAAM,GAAKlB,GAAQO,KAAKL,KAC3EK,KAAKH,SAAS,IAAMG,KAAKH,SAAS,GAAKG,KAAKL,KAAOgB,EAAM,GAAKlB,GAAQO,KAAKL,O,+BAI3EK,KAAKJ,SAAS,IAAMI,KAAKH,SAAS,GAAKJ,EACvCO,KAAKJ,SAAS,IAAMI,KAAKH,SAAS,GAAKJ,EAEb,KAAtBO,KAAKb,MAAMyB,QACXZ,KAAKb,MAAM0B,QAGf,IAAIC,EAAO,CAACd,KAAKJ,SAAS,GAAII,KAAKJ,SAAS,IAC5CI,KAAKb,MAAM4B,KAAKD,O,KAOxB,SAASE,EAAUC,EAAOC,GACtB,OAAOC,KAAKC,UAAYF,EAAQD,GAASA,EAOtC,SAASI,EAAcC,EAAGZ,EAAGa,EAAMC,EAAOC,GAC7CtC,EAAQmC,EACRlC,EAAOsB,EACPjB,EAAO8B,EACPlC,EAAYoC,EAERD,GAWJjD,EAAEmD,iBAAiB,YAAaC,GAChCpD,EAAEmD,iBAAiB,UAAWE,KAI9BrD,EAAEsD,oBAAoB,YAAaF,GACnCpD,EAAEsD,oBAAoB,UAAWD,IAXjCrC,EAAS,IACTC,EAAS,EAab,SAASmC,EAAYlB,GACjBzB,EAAUyB,EAAEqB,QACZ7C,EAAUwB,EAAEsB,QAIhB,SAASH,EAAUnB,GAEf,IAAIuB,EAAM,EAAEvB,EAAEqB,QAAU9C,GAAW,IAAKyB,EAAEsB,QAAU9C,GAAW,IAC/DC,EAAO6B,KAAK,IAAIrB,EACZ,KACA,CAACV,EAASC,GACV+C,EACA,iBAGJC,EAAU/C,EAAOA,EAAO0B,OAAS,IAoDrC,SAASqB,EAAUxB,GACfjC,EAAI0D,YAGJ1D,EAAI2D,IAAI1B,EAAEb,SAAS,GAAIa,EAAEb,SAAS,GAtGtC,SAA0Ba,GACtB,OAAOU,KAAKiB,MAALjB,KAAA,IAAW,EAAMA,KAAKkB,MAAM5B,EAAEd,MAAQ,IAqGP2C,CAAiB7B,GAAI,EAAG,EAAIU,KAAKoB,IAEvE/D,EAAIY,OACJZ,EAAIgE,YAgFR,SAASC,IACAhE,GACDiE,sBAAsBD,GAG1B9D,EAAMgE,KAAKhE,OACXE,EAAUF,EAAMC,GAEFF,IACVE,EAAOD,EAAOE,EAAUH,EAExBF,EAAIoE,UAAU,EAAG,EAAG9D,EAAOC,GAEvBM,GArCZ,WAEI,IAAIqB,EAAIS,KAAK0B,MAAM,IAAOhE,GAC1BW,EAASkB,EAAIlB,EAASkB,EAAIlB,EAC1BD,EAASmB,EAAInB,EAASmB,EAAInB,EAE1Bf,EAAIsE,KAAO,aACXtE,EAAIuE,YAAc,eAClBvE,EAAIwE,SAAS,QAAUtC,EAAEuC,WAAY,GAAI,IACzCzE,EAAIwE,SAAS,QAAUxD,EAAOyD,WAAY,GAAI,IAC9CzE,EAAIwE,SAAS,QAAUzD,EAAO0D,WAAY,GAAI,IAC9CzE,EAAIwE,SAAS,WAAa9D,EAAO0B,OAAOqC,WAAY,GAAI,IA2BhDC,GAIJhE,EAAOsB,SAAQ,SAAAC,GAgBX,OAdAjC,EAAI2E,YAAc,EAElB1C,EAAE2C,MAAM3C,EAAE4C,MAAMnE,IAChBuB,EAAE6C,SAEF9E,EAAIuE,YAActC,EAAEX,MACpBtB,EAAI+E,UAAY9C,EAAEX,MAElBmC,EAAUxB,GAEVjC,EAAI2E,YAAc,GAClB3E,EAAIgF,UAAY,EAGRrE,GACJ,IAAK,SA/GrB,SAA2BsB,GAEvBjC,EAAI0D,YAEJ1D,EAAIiF,OAAOhD,EAAEtB,MAAM,GAAIsB,EAAEtB,MAAM,IAM/B,IAAK,IAAIuE,EAAI,EAAGA,EAAIjD,EAAEtB,MAAMyB,OAAS,EAAG8C,IAAK,CAEzC,IAAIC,GAAMlD,EAAEtB,MAAMuE,GAAG,GAAKjD,EAAEtB,MAAMuE,EAAI,GAAG,IAAM,EAC3CE,GAAMnD,EAAEtB,MAAMuE,GAAG,GAAKjD,EAAEtB,MAAMuE,EAAI,GAAG,IAAM,EAE/ClF,EAAIqF,iBAAiBpD,EAAEtB,MAAMuE,GAAG,GAAIjD,EAAEtB,MAAMuE,GAAG,GAAIC,EAAIC,GAG3D,GAAInD,EAAEtB,MAAMyB,OAAS,EAAG,CACpB,IAAIkD,EAAIrD,EAAEtB,MAAMyB,OAAS,EAEzBpC,EAAIqF,iBAAiBpD,EAAEtB,MAAM2E,GAAG,GAAIrD,EAAEtB,MAAM2E,GAAG,GAAIrD,EAAEtB,MAAM2E,EAAI,GAAG,GAAIrD,EAAEtB,MAAM2E,EAAI,GAAG,IAGzFtF,EAAIuF,UAES,IAAT3E,GACAZ,EAAIY,OAGRZ,EAAIgE,YAkFYwB,CAAkBvD,GAClB,MAEJ,IAAK,QAlFrB,SAA0BA,GACtBjC,EAAI0D,YAEJ1D,EAAIiF,OAAOhD,EAAEtB,MAAM,GAAG,GAAIsB,EAAEtB,MAAM,GAAG,IAErCsB,EAAEtB,MAAMqB,SAAQ,SAAAyD,GAEZzF,EAAI0F,OAAOD,EAAE,GAAIA,EAAE,OAGvBzF,EAAIuF,UAES,IAAT3E,GACAZ,EAAIY,OAGRZ,EAAIgE,YAmEY2B,CAAiB1D,QC7S9B,ICiIH2D,EAAUC,EAAM9F,EAAGC,EDjIV8F,EAAb,kDACC,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACZC,IAAK,IACLtF,MAAO,OACPC,MAAM,EACNmC,KAAM,EACNC,OAAO,EACPC,MAAM,GAGP,EAAKiD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gBAhBF,EADpB,gEDgIIpG,EAAIyG,SAASC,eAAe,SAC5BzG,EAAMD,EAAE2G,WAAW,MAEnBpG,EAAQP,EAAEO,MACVC,EAASR,EAAEQ,OAEXN,EAAO,ICtIX,2CA0BE4C,EACCrB,KAAKwE,MAAMrF,MACXa,KAAKwE,MAAMpF,KACXY,KAAKwE,MAAMjD,KACXvB,KAAKwE,MAAMhD,MACXxB,KAAKwE,MAAM/C,QA/Bd,mCAmCchB,GACZT,KAAKmF,SAAL,eAAiB1E,EAAE2E,OAAOC,KAAO5E,EAAE2E,OAAOE,UApC5C,kCAuCa7E,IDkGN,SAAegE,GAClBhG,EAAO,EAEPD,EAAIoE,UAAU,EAAG,EAAG9D,EAAOC,IAE3BG,EAAS,IAEF6B,KAAK,IAAIrB,EACZ,KACA,CAACyB,KAAK0B,MAAM/D,EAAQ,GAAIqC,KAAK0B,MAAM9D,EAAS,IAC5C,CAAC,EAAG,GACJ,iBAGJ,IAAK,IAAI2E,EAAI,EAAGA,EAAIe,EAAKf,IACrBxE,EAAO6B,KAAK,IAAIrB,EACI,KAAhByB,KAAKC,SACL,CAACJ,EAAU,EAAGlC,GAAQkC,EAAU,EAAGjC,IACnC,CAACiC,GAAW,EAAG,GAAIA,GAAW,EAAG,IACjC,OAAUG,KAAK0B,MAAsB,IAAhB1B,KAAKC,UAAkB,IAAMD,KAAK0B,MAAsB,IAAhB1B,KAAKC,UAAkB,IAAMD,KAAK0B,MAAsB,IAAhB1B,KAAKC,UAAmB,MAIjI5C,EAAI+E,UAAYrE,EAAOwE,GAAG5D,MAC1BmC,EAAU/C,EAAOwE,ICzHvB6B,CAAMvF,KAAKwE,MAAMC,OAxCnB,kCA2CahE,GD4HTvB,EAAS,GACTV,EAAIoE,UAAU,EAAG,EAAG9D,EAAOC,KCxK/B,2CA+CsB0B,GACpBT,KAAKmF,SAAL,eAAiB1E,EAAE2E,OAAOC,KAAO5E,EAAE2E,OAAOI,YAhD5C,qCD8PI/G,GAAc,EACdC,EAAW,IA1PH,GA2PRE,EAAO+D,KAAKhE,MAEZ8D,MClQJ,+BAwDE,OACC,yBAAKgD,GAAG,SACP,yBAAKA,GAAG,UACP,4BAAQA,GAAG,QAAQ3G,MAAO4G,OAAOC,WAAY5G,OAAQ2G,OAAOE,YAAc,OAG3E,4BAAQC,QAAS7F,KAAK+E,cAAtB,cAEA,6BAEA,kDAEC,2BAAOM,KAAK,MAAMS,KAAK,SAASR,MAAOtF,KAAKwE,MAAMC,IAAKsB,SAAU/F,KAAK0E,gBAGvE,6BAEA,4CAEC,4BAAQW,KAAK,QAAQC,MAAOtF,KAAKwE,MAAMrF,MAAO4G,SAAU/F,KAAK0E,cAC5D,4BAAQY,MAAM,QAAd,YACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,SAAd,uBAIF,6BAEA,4CAEC,2BACCD,KAAK,OACLS,KAAK,WACLN,QAASxF,KAAKwE,MAAMpF,KACpB2G,SAAU/F,KAAK4E,wBAGjB,6BAEA,sDAEC,2BACCS,KAAK,QACLS,KAAK,WACLN,QAASxF,KAAKwE,MAAMhD,MACpBuE,SAAU/F,KAAK4E,wBAGjB,6BAEA,8CAGC,2BACCS,KAAK,OACLS,KAAK,WACLN,QAASxF,KAAKwE,MAAM/C,KACpBsE,SAAU/F,KAAK4E,wBAGjB,6BAGA,kDAEC,2BAAOS,KAAK,OAAOS,KAAK,SAASR,MAAOtF,KAAKwE,MAAMjD,KAAMwE,SAAU/F,KAAK0E,gBAGzE,6BAGA,4BAAQmB,QAAS7F,KAAK6E,aAAtB,YACA,4BAAQgB,QAAS7F,KAAK8E,aAAtB,cAhIJ,GAA4BkB,IAAMC,WCH5BC,E,WACF,WAAY9B,EAAU+B,GAAW,oBAC7BnG,KAAKoE,SAAWA,EAChBpE,KAAKmG,SAAWA,EAChBnG,KAAKoG,OAAS,GACdpG,KAAKqG,SAAU,E,mDAGZC,GACEtG,KAAKoE,SAASmC,SAASD,KAIxBtG,KAAKoG,OAAOxF,OAASZ,KAAKmG,SAC1BnG,KAAKoG,OAAOrF,KAAKuF,IAEZtG,KAAKqG,UACNrG,KAAKwG,SACLxG,KAAKqG,SAAU,GAGnBrG,KAAKyG,GAAGC,OAAOJ,GACftG,KAAK2G,GAAGD,OAAOJ,GACftG,KAAK4G,GAAGF,OAAOJ,GACftG,KAAK6G,GAAGH,OAAOJ,O,+BAMnB,IAAIQ,EAAI9G,KAAKoE,SAAS0C,EAClBC,EAAI/G,KAAKoE,SAAS2C,EAClBC,EAAIhH,KAAKoE,SAAS4C,EAClBC,EAAIjH,KAAKoE,SAAS6C,EAEtBjH,KAAKyG,GAAK,IAAIP,EAAS,IAAIgB,EAAKJ,EAAKE,EAAI,EAAID,EAAKE,EAAI,EAAID,EAAI,EAAGC,EAAI,GAAIjH,KAAKmG,UAC9EnG,KAAK2G,GAAK,IAAIT,EAAS,IAAIgB,EAAKJ,EAAKE,EAAI,EAAID,EAAKE,EAAI,EAAID,EAAI,EAAGC,EAAI,GAAIjH,KAAKmG,UAC9EnG,KAAK4G,GAAK,IAAIV,EAAS,IAAIgB,EAAKJ,EAAKE,EAAI,EAAID,EAAKE,EAAI,EAAID,EAAI,EAAGC,EAAI,GAAIjH,KAAKmG,UAC9EnG,KAAK6G,GAAK,IAAIX,EAAS,IAAIgB,EAAKJ,EAAKE,EAAI,EAAID,EAAKE,EAAI,EAAID,EAAI,EAAGC,EAAI,GAAIjH,KAAKmG,Y,6BAK9E,IAAIW,EAAI9G,KAAKoE,SAAS0C,EAClBC,EAAI/G,KAAKoE,SAAS2C,EAClBC,EAAIhH,KAAKoE,SAAS4C,EAClBC,EAAIjH,KAAKoE,SAAS6C,EAEtBzI,EAAI0D,YACJ1D,EAAI2I,KAAKL,EAAIE,EAAGD,EAAIE,EAAO,EAAJD,EAAW,EAAJC,GAC9BzI,EAAIgE,YAGJxC,KAAKoG,OAAO5F,SAAQ,SAAA4G,GAChB5I,EAAI0D,YAEJ1D,EAAI2D,IAAIiF,EAAEN,EAAGM,EAAEL,EAAG,EAAG,EAAa,EAAV5F,KAAKoB,IAE7B/D,EAAIgE,eAERhE,EAAIuF,SAEA/D,KAAKqG,UACLrG,KAAKyG,GAAGhE,OACRzC,KAAK2G,GAAGlE,OACRzC,KAAK4G,GAAGnE,OACRzC,KAAK6G,GAAGpE,QAEZjE,EAAIuF,a,KAKNsD,E,WACF,WAAYP,EAAGC,EAAGO,GAAI,oBAClBtH,KAAK8G,EAAIA,EACT9G,KAAK+G,EAAIA,EACT/G,KAAKsH,EAAIA,E,wGAYXJ,E,WACF,WAAYJ,EAAGC,EAAGC,EAAGC,GAAI,oBACrBjH,KAAK8G,EAAIA,EACT9G,KAAK+G,EAAIA,EACT/G,KAAKgH,EAAIA,EACThH,KAAKiH,EAAIA,E,qDAGJG,GACL,OAAQA,EAAEN,EAAI9G,KAAK8G,EAAI9G,KAAKgH,GAAKI,EAAEN,EAAI9G,KAAK8G,EAAI9G,KAAKgH,GACjDI,EAAEL,EAAI/G,KAAK+G,EAAI/G,KAAKiH,GAAKG,EAAEL,EAAI/G,KAAK+G,EAAI/G,KAAKiH,M,KAgBzD,SAASM,EAAU9G,GACfvB,GAAO6B,KAAK,IAAIsG,EAAM5G,EAAEqB,QAASrB,EAAEsB,UAGvC,SAASU,IAEL4B,EAAO,IAAI6B,EAAS9B,EAAU,GAE9BlF,GAAOsB,SAAQ,SAAAC,GACX4D,EAAKqC,OAAOjG,MAGhB4D,EAAK5B,OAELC,sBAAsBD,GAI1B,ICnIIlE,EACAC,EAEAgJ,EAEAC,GACAC,GAEAC,GACAC,GAEAnI,GACAoI,GACAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GAEAC,GACA3J,GD6GAS,GAAS,GElIAgH,GAAb,kDACI,WAAY3B,GAAQ,uCACVA,GAFd,iEFoGO,SAAcxF,GACjBR,EAAIyG,SAASC,eAAe,QAC5BzG,EAAMD,EAAE2G,WAAW,MAEnBd,EAAW,IAAI8C,EAAKnI,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,GAGjE2G,OAAOhE,iBAAiB,QAAS6F,GAEjC9E,IEvGI4F,CAAK3C,OAAOE,eANpB,+BAUQ,OACI,6BACI,4BAAQH,GAAG,OAAO3G,MAAO4G,OAAOE,YAAa7G,OAAQ2G,OAAOE,mBAZ5E,GAA8BI,IAAMC,W,4BCFvBqC,GAAb,WAKI,WAAYT,EAAMC,GAAU,oBACxB9H,KAAK8H,QAAUA,EACf9H,KAAK6H,KAAOA,EAEZ7H,KAAKuI,MAAQ,GACbvI,KAAKwI,WAVb,uDAgBQ,IAAK,IAAIC,EAAM,EAAGA,EAAMzI,KAAK6H,KAAMY,IAAO,CACtCzI,KAAKuI,MAAMxH,KAAK,IAEhB,IAAK,IAAI2H,EAAS,EAAGA,EAAS1I,KAAK8H,QAASY,IACxC1I,KAAKuI,MAAME,GAAK1H,KAAK,IAAI4H,GAAKD,EAAQD,OApBtD,gCA6BQ,IAFA,IAAIG,EAEKH,EAAM,EAAGA,EAAMzI,KAAK6H,KAAMY,IAE/B,IAAK,IAAIC,EAAS,EAAGA,EAAS1I,KAAK8H,QAASY,IAAU,CAClDE,EAAU5I,KAAKuI,MAAME,GAAKC,GAC1B,IAAIjD,EAAK,EAGG,IAARgD,GACAG,EAAQC,YAAY9H,KAAK,CAAC0E,EAAIzF,KAAKuI,MAAME,EAAM,GAAGC,IAAS,IAG/DjD,IAGIiD,IAAW1I,KAAK8H,QAAU,GAC1Bc,EAAQC,YAAY9H,KAAK,CAAC0E,EAAIzF,KAAKuI,MAAME,GAAKC,EAAS,IAAI,IAG/DjD,IAGIgD,IAAQzI,KAAK6H,KAAO,GACpBe,EAAQC,YAAY9H,KAAK,CAAC0E,EAAIzF,KAAKuI,MAAME,EAAM,GAAGC,IAAS,IAG/DjD,IAGe,IAAXiD,GACAE,EAAQC,YAAY9H,KAAK,CAAC0E,EAAIzF,KAAKuI,MAAME,GAAKC,EAAS,IAAI,OA1D/E,uCAsEqBI,EAActE,GAC3B,IAAM+D,EAAQ,GAOd,OANAO,EAAaD,YAAYrI,SAAQ,SAAAC,GACzBA,EAAE,IAAM+D,GACR+D,EAAMxH,KAAKN,EAAE,OAId8H,MA9Ef,KAoFaI,GAAb,WACI,WAAY7B,EAAGC,GAAI,oBAEf/G,KAAK8G,EAAIA,EACT9G,KAAK+G,EAAIA,EAGT/G,KAAK6I,YAAc,GAGnB7I,KAAK+I,SAAU,EAGf/I,KAAKgJ,YAAc,EACnBhJ,KAAKiJ,gBAAiB,EACtBjJ,KAAKkJ,SAAU,EACflJ,KAAKmJ,cAAgB,KACrBnJ,KAAKoJ,WAAaC,IAjB1B,wDAoBgBC,GACRtJ,KAAK6I,YAAYrI,SAAQ,SAAA+I,GACjBA,EAAO,IAAMD,IACbC,EAAO,IAAK,UAvB5B,KFtCO,SAASC,KACZ/K,GAAO,GACP+I,EAAO,IAAIc,GAAKT,GAAMC,KACjB2B,UAELhC,GAActG,KAAKiB,MAAMwF,GAAeE,IACxCJ,GAAevG,KAAKiB,MAAMuF,GAAgBE,IAE1CO,GAAmB,CAAC,EAAG,GACvBH,GAAW,GACXE,GAAO,GACPD,GAAiB,GAEjBzF,KAaG,SAASiH,KACZjL,IAAO,EAQX,SAASkL,GAASC,EAAKC,GACnB,IAAK,IAAI5F,KAAK4F,EACV,GAAID,IAAQC,EAAI5F,GACZ,OAAO,EAGf,OAAO,EAIJ,SAAe6F,KAAtB,gC,gDAAO,mCAAAC,EAAA,sDACHtL,IAAO,EACHqF,EAAI,EAGJkG,EAAe,CAACxC,EAAKe,MAAM,GAAG,IAClCN,GAAW+B,EANR,KAAAD,EAAA,yCAAAA,EAAA,0DASKtL,GATL,+DAaKqK,EAAekB,EAAaA,EAAapJ,OAAS,IAElDnB,IAAQqE,EAAIkE,IAAQ,GAA6B,IAAxBgC,EAAapJ,OAf3C,uBAgBKwH,GAAmB,CAACU,EAAahC,EAAGgC,EAAa/B,GACjDjD,EAAI,EAjBT,SAkBWrB,KAlBX,OAqBCqG,EAAaC,SAAU,EACnBkB,EAAazC,EAAK0C,iBAAiBpB,GAAc,GACjDqB,EAAU,GAEdF,EAAWzJ,SAAQ,SAAAC,GACVA,EAAEsI,SACHoB,EAAQpJ,KAAKN,MAIhB0J,EAAQvJ,QAGLwJ,EAASD,EAAQhJ,KAAKiB,MAAMjB,KAAKC,SAAW+I,EAAQvJ,SAExDkI,EAAauB,YAAYD,GACzBA,EAAOC,YAAYvB,GAEnBkB,EAAajJ,KAAKqJ,IAPlBJ,EAAaM,MAWjBxG,IA3CD,qDAQ4B,IAAxBkG,EAAapJ,OARjB,sKA+CH6B,KA/CG,6C,sBAmDA,SAAe8H,KAAtB,gC,gDAAO,mCAAAR,EAAA,sDACHtL,GAAO,EAGHqF,EAAI,EAER0D,EAAKe,MAAM,GAAG,GAAGQ,SAAU,EAE3Bd,GAAW,CAACT,EAAKe,MAAM,GAAG,GAAIf,EAAKe,MAAM,GAAG,IARzC,KAAAwB,EAAA,yCAAAA,EAAA,0DAWKtL,GAXL,+DAeK+L,EAAQrJ,KAAKiB,MAAMjB,KAAKC,SAAW6G,GAASrH,QAChDkI,EAAeb,GAASuC,IAEpB/K,IAAQqE,EAAIkE,IAAQ,EAlBzB,uBAmBKI,GAAmB,CAACU,EAAahC,EAAGgC,EAAa/B,GACjDjD,EAAI,EApBT,SAqBWrB,KArBX,OAwBCqG,EAAaC,SAAU,EAEnBkB,EAAazC,EAAK0C,iBAAiBpB,GAAc,GACjDqB,EAAU,GAEdF,EAAWzJ,SAAQ,SAAAC,GACXA,EAAEsI,SACFoB,EAAQpJ,KAAKN,MAIhB0J,EAAQvJ,QAGLwJ,EAASD,EAAQhJ,KAAKiB,MAAMjB,KAAKC,SAAW+I,EAAQvJ,SAExDkI,EAAauB,YAAYD,GACzBA,EAAOC,YAAYvB,GAEnBb,GAASwC,OAAOD,EAAO,GAEvBP,EAAWzJ,SAAQ,SAAAC,GACVA,EAAEsI,SAAYY,GAASlJ,EAAGwH,KAC3BA,GAASlH,KAAKN,OAXtBwH,GAASwC,OAAOD,EAAO,GApC5B,qDAUwB,IAApBvC,GAASrH,OAVb,sKAsDH6B,KAtDG,6C,sBA4DA,SAAeiI,KAAtB,gC,gDAAO,6CAAAX,EAAA,uDACCjB,EAAetB,EAAKe,MAAM,GAAG,IACpBa,WAAa,EAC1BN,EAAaK,eAAiB,EAC9BL,EAAa6B,MAAO,EAEhB7G,EAAI,EAEJ8G,EAAWpD,EAAKe,MAAMf,EAAKK,KAAO,GAAGL,EAAKM,QAAU,GARrD,KAAAiC,EAAA,qCAAAA,EAAA,0DAiBKtL,GAjBL,+DAqBKqK,GAAgB8B,EArBrB,gBAuBK,IADIC,EAAQD,GACmB,GAAxBC,EAAM1B,eACThB,GAAK2C,QAAQ,CAACD,EAAM/D,EAAG+D,EAAM9D,IAC7B8D,EAAQA,EAAM1B,cAzBvB,OA4BKhB,GAAK2C,QAAQ,CAACD,EAAM/D,EAAG+D,EAAM9D,IAE7BtE,KA9BL,qBAgCkBmI,EAASG,IAhC3B,UAmCKxC,EAAQ,GAEEf,EAAK0C,iBAAiBpB,GAAc,GAC1CtI,SAAQ,SAAAC,GACPA,EAAEwI,gBACHV,EAAMxH,KAAKN,MAInB8H,EAAM/H,SAAQ,SAAA8I,GACVrC,EAAI9F,KAAK6J,IAAIJ,EAAS7D,EAAIuC,EAAKvC,GAAK5F,KAAK6J,IAAIJ,EAAS9D,EAAIwC,EAAKxC,IAE/DmE,EAAOnC,EAAaE,YAAkB,EAAJ/B,GAEvBqC,EAAKF,aACZE,EAAKF,WAAa6B,EAClB3B,EAAKN,YAAcF,EAAaE,YAAc,EAC9CM,EAAKH,cAAgBL,GAGpBQ,EAAKJ,UACNhB,GAAenH,KAAKuI,GACpBA,EAAKJ,SAAU,MAKvBgC,EAAW7B,IACX8B,EAAU,KAEVjD,GAAe1H,SAAQ,SAAA8I,GACdA,EAAKL,gBACFK,EAAKF,YAAc8B,IACnBC,EAAU7B,EACV4B,EAAW5B,EAAKF,eAKb,MAAX+B,EA1EL,6CA2EY,aA3EZ,WA8ECA,EAAQlC,gBAAiB,EACzBH,EAAeqC,GAEX1L,IAAQqE,EAAIkE,KAAS,EAjF1B,kCAkFWvF,KAlFX,QAqFCqB,IArFD,4O,sBA0FP,SAASrB,KAEL,OAAO,IAAI2I,SAAQ,SAAAC,GACfC,YAAW,WAIP,IAAK,IAAIhG,KAHT9G,EAAIoE,UAAU,EAAG,EAAGgF,GAAcD,IAElCnJ,EAAI0D,YACc+F,GAAU,CACxB,IAAIqB,EAAOrB,GAAS3C,GACpB9G,EAAI2I,KAAKmC,EAAKxC,EAAIW,GAAa6B,EAAKvC,EAAIW,GAAcD,GAAaC,IAMvE,GAJAlJ,EAAI+E,UAAY,OAChB/E,EAAIY,OACJZ,EAAIgE,YAEgB,IAAhB2F,GAAKvH,OAAc,CACnBpC,EAAI0D,YACJ1D,EAAIuE,YAAc,MAClB,IAAIwI,EAAO,CAAC,EAAG,GAEf/M,EAAIiF,OAAOgE,IAAe8D,EAAK,GAAK,IAAM7D,IAAgB6D,EAAK,GAAK,KAEpEpD,GAAK3H,SAAQ,SAAAgL,GACThN,EAAI0F,OAAOuD,IAAe+D,EAAM,GAAK,IAAM9D,IAAgB8D,EAAM,GAAK,QAG1EhN,EAAIuF,SACJvF,EAAIgE,iBAGJhE,EAAI0D,YACJgG,GAAe1H,SAAQ,SAAA8I,GACQ,GAAvBA,EAAKL,gBACLzK,EAAI2I,KAAKmC,EAAKxC,EAAIW,GAAa6B,EAAKvC,EAAIW,GAAcD,GAAaC,OAI3ElJ,EAAI+E,UAAY,OAChB/E,EAAIY,OACJZ,EAAIgE,YAEJhE,EAAI0D,YACJgG,GAAe1H,SAAQ,SAAAC,GACK,GAApBA,EAAEwI,gBACFzK,EAAI2I,KAAK1G,EAAEqG,EAAIW,GAAahH,EAAEsG,EAAIW,GAAcD,GAAaC,OAIrElJ,EAAI+E,UAAY,OAChB/E,EAAIY,OAEJZ,EAAIgE,YAMR,IAAI8G,EAHJ9K,EAAI0D,YACJ1D,EAAIuE,YAAc,QAIlB,IAAK,IAAI0F,EAAM,EAAGA,EAAMjB,EAAKK,KAAMY,IAE/B,IAAK,IAAIC,EAAS,EAAGA,EAASlB,EAAKM,QAASY,KAExCY,EAAO9B,EAAKe,MAAME,GAAKC,IAElBG,YAAYrI,SAAQ,SAAAC,GACrB,IAAIgF,EAAKhF,EAAE,GACPgL,EAAOhL,EAAE,GAETqG,EAAIW,GAAc6B,EAAKxC,EACvBC,EAAIW,GAAe4B,EAAKvC,EAE5B,GAAI0E,EACA,OAAQhG,GACJ,KAAK,EACDjH,EAAIiF,OAAOqD,EAAGC,GACdvI,EAAI0F,OAAO4C,EAAIW,GAAaV,GAC5B,MAEJ,KAAK,EACDvI,EAAIiF,OAAOqD,EAAIW,GAAaV,GAC5BvI,EAAI0F,OAAO4C,EAAIW,GAAaV,EAAIW,IAChC,MAEJ,KAAK,EACDlJ,EAAIiF,OAAOqD,EAAIW,GAAaV,EAAIW,IAChClJ,EAAI0F,OAAO4C,EAAGC,EAAIW,IAClB,MAEJ,KAAK,EACDlJ,EAAIiF,OAAOqD,EAAGC,EAAIW,IAClBlJ,EAAI0F,OAAO4C,EAAGC,OAStCvI,EAAI2I,KAAK,EAAG,EAAGK,EAAKM,QAAUL,GAAaD,EAAKK,KAAOH,IAEvDlJ,EAAIuF,SACJvF,EAAIgE,YAEJhE,EAAI0D,YACJ1D,EAAI2I,KAAKiB,GAAiB,GAAKX,GAAaW,GAAiB,GAAKV,GAAcD,GAAaC,IAC7FlJ,EAAI+E,UAAY,MAChB/E,EAAIY,OACJZ,EAAIgE,YAEJ6I,EAAQ,WACTtD,OGlZJ,ICHHxJ,GAAGC,GAAKO,GAAQD,GAAO+K,GAAKpF,GAAKhG,GAAMsJ,GAAOC,GAAM0D,GDG3CpD,GAAb,kDACI,WAAY/D,GAAQ,IAAD,8BACf,gBACKC,MAAQ,CACT1F,MAAO,GACPC,OAAQ,GACRgJ,MAAO,IACPC,KAAM,EACNvI,MAAM,GAGV,EAAKiF,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKgH,aAAe,EAAKA,aAAahH,KAAlB,gBACpB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAZb,EADvB,gEHyBIpG,EAAIyG,SAASC,eAAe,eAC5BzG,EAAMD,EAAE2G,WAAW,MAEnByC,GAAgBpJ,EAAEQ,OAClB6I,GAAerJ,EAAEO,MAEjBW,IAAO,EACPqI,GAAU,GACVD,GAAO,GACPE,GAAQ,IACRC,GAAO,EAEPxJ,EAAIgF,UAAY,EAChBhF,EAAI+E,UAAY,MAEhBiG,OGxCJ,2CAqBQxJ,KAAK2L,iBArBb,mCAwBiBlL,GACTT,KAAKmF,SAAL,eAAiB1E,EAAE2E,OAAOC,KAAO5E,EAAE2E,OAAOE,UAzBlD,qCH6DO,IAAuBsG,EAAOC,EAAUC,EAAQC,EAAOC,EAAhCJ,EG/BlB5L,KAAKwE,MAAMzF,OH+Bc8M,EG9BzB7L,KAAKwE,MAAM1F,MH8BwBgN,EG7BnC9L,KAAKwE,MAAMuD,MH6BgCgE,EG5B3C/L,KAAKwE,MAAM/E,KH4BuCuM,EG3BlDhM,KAAKwE,MAAMwD,KH4BnBH,GAAO+D,EACP9D,GAAU+D,EACV9D,GAAQ+D,EACRrM,GAAOsM,EACP/D,GAAOgE,IGlEX,2CAsCyBvL,GACjBT,KAAKmF,SAAL,eAAiB1E,EAAE2E,OAAOC,KAAO5E,EAAE2E,OAAOI,YAvClD,+BA2CQ,OACI,yBAAKC,GAAG,SACJ,oCAEA,4BAAQI,QAAS2D,IAAjB,YAEA,4BAAQ3D,QAASiE,IAAjB,eACA,4BAAQjE,QAAS0E,IAAjB,SAEA,4BAAQ1E,QAAS6E,IAAjB,MAGA,4BAAQ7E,QAAS6D,IAAjB,QAEA,6BAEA,uCAEI,2BACIrE,KAAK,QACLS,KAAK,SACLR,MAAOtF,KAAKwE,MAAM1F,MAClBiH,SAAU/F,KAAK0E,gBAGvB,6BAEA,wCAEI,2BACIW,KAAK,SACLS,KAAK,SACLR,MAAOtF,KAAKwE,MAAMzF,OAClBgH,SAAU/F,KAAK0E,gBAGvB,6BAEA,uCAEI,2BACIW,KAAK,QACLS,KAAK,SACLR,MAAOtF,KAAKwE,MAAMuD,MAClBhC,SAAU/F,KAAK0E,gBAGvB,6BAEA,sCAEI,2BACIW,KAAK,OACLS,KAAK,SACLR,MAAOtF,KAAKwE,MAAMwD,KAClBjC,SAAU/F,KAAK0E,gBAGvB,6BAEA,+CAEX,2BACmBW,KAAK,OACLS,KAAK,WACLN,QAASxF,KAAKwE,MAAM/E,KACpBsG,SAAU/F,KAAK4E,wBAGvB,4BAAQa,GAAG,cAAc3G,MAAO4G,OAAOC,WAAa,MAAO5G,OAAQoC,KAAK0B,MAAM6C,OAAOE,YAAc,aAhHnH,GAA0BI,IAAMC,WCiBzB,SAASV,KACZ9G,GAAO,EAnBX,WACIoL,GAAM,GAEN,IAAK,IAAInG,EAAI,EAAGA,EAAIe,GAAKf,IACrBmG,GAAI9I,MAmCOkL,EAnCQ,EAmCHC,EAnCMpN,GAoCnBqC,KAAKiB,MAAMjB,KAAKC,UAAY8K,EAAOD,EAAM,GAAKA,KADzD,IAAmBA,EAAKC,EAnBpBC,GAEA,IAAI7K,EAAIyG,GACRA,GAAQ,EACRtF,KACAsF,GAAQzG,EAkBZ,SAASmB,KACL,OAAO,IAAI2I,SAAQ,SAACC,GAChBC,YAAW,WACP9M,GAAIoE,UAAU,EAAG,EAAG9D,GAAOC,IAE3BP,GAAI0D,YAEJ,IAAK,IAAIwB,EAAI,EAAGA,EAAImG,GAAIjJ,OAAQ8C,IAE5BlF,GAAI2I,KAAK,EAAIzD,GAAKgI,GAAY,GAAK7B,GAAInG,GAAIgI,IAG/ClN,GAAIY,OACJZ,GAAIuF,SACJvF,GAAIgE,YAEJ6I,EAAQ,kBACTtD,OAIJ,SAAeqE,KAAtB,gC,gDAAO,iCAAArC,EAAA,sDACHtL,GAAO,EACHqF,EAAI,EAGCJ,EAAI,EALV,YAKaA,EAAImG,GAAIjJ,QALrB,iBAOUqD,EAAI,EAPd,YAOiBA,EAAI4F,GAAIjJ,OAAS,EAAI8C,GAPtC,sBASSmG,GAAI5F,GAAK4F,GAAI5F,EAAI,IAT1B,oBAWS4F,GAAMwC,GAAKxC,GAAK5F,EAAGA,EAAI,GAEnBH,EAAIkE,IAAQ,EAbzB,wBAcalE,EAAI,EAdjB,UAemBrB,KAfnB,YAkBahE,GAlBb,mDAsBSqF,IAtBT,QAOyCG,IAPzC,uBAK6BP,IAL7B,uBA2BHjB,KA3BG,6C,sBA8BA,SAAe6J,KAAtB,gC,gDAAO,mCAAAvC,EAAA,sDAECjG,EAAI,EAECJ,EAAI,EAJV,YAIaA,EAAImG,GAAIjJ,QAJrB,iBAOC,IAFI2L,EAAS,EAEJtI,EAAI,EAAGA,EAAI4F,GAAIjJ,OAAS8C,EAAGO,IAC5B4F,GAAI0C,GAAU1C,GAAI5F,KAClBsI,EAAStI,GATlB,GAaC4F,GAAMwC,GAAKxC,GAAKA,GAAIjJ,OAAS8C,EAAI,EAAG6I,GAEhCzI,EAAIkE,IAAQ,EAfjB,wBAgBKlE,EAAI,EAhBT,UAiBWrB,KAjBX,QAoBCqB,IApBD,QAI6BJ,IAJ7B,uBAwBHjB,KAxBG,6C,sBA2BP,SAAS4J,GAAKtC,EAAGrG,EAAG8I,GAChB,IAAI1L,EAAOiJ,EAAErG,GAIb,OAHAqG,EAAErG,GAAKqG,EAAEyC,GACTzC,EAAEyC,GAAK1L,EAEAiJ,EC7HJ,IAAM0C,GAAb,kDACI,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,IAAK,IACLsD,MAAO,GACPC,KAAM,EACNlJ,MAAO,GAGX,EAAK4F,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKgH,aAAe,EAAKA,aAAahH,KAAlB,gBAZL,EADvB,gEDQIpG,GAAIyG,SAASC,eAAe,kBAC5BzG,GAAMD,GAAE2G,WAAW,MACnBnG,GAASR,GAAEQ,OACXD,GAAQP,GAAEO,MACVL,GAAO,EACPsJ,GAAQ,GACRC,GAAO,ECIHhI,KAAK2L,eACLpG,OAnBR,2CAuBQvF,KAAK2L,iBAvBb,qCD4BO,IAAgB7H,EAAG4I,EAAGzI,EAAG+C,EAATlD,ECAX9D,KAAKwE,MAAMC,IDAGiI,ECCd1M,KAAKwE,MAAMuD,MDDM9D,ECEjBjE,KAAKwE,MAAMwD,KDFShB,ECGpBhH,KAAKwE,MAAM1F,MDFnB2F,GAAMX,EACNiE,GAAQ2E,EACR1E,GAAO/D,EACPyH,GAAYiB,SAAS3F,GACrBjI,GAASR,GAAEQ,OAEX0D,OCnCJ,mCAmCiBhC,GACTT,KAAKmF,SAAL,eAAiB1E,EAAE2E,OAAOC,KAAO5E,EAAE2E,OAAOE,UApClD,kCAuCgB7E,GACR8E,OAxCR,+BA4CQ,OACI,yBAAKE,GAAG,SACJ,kDACA,4BAAQI,QAAS7F,KAAK6E,aAAtB,SAEA,6BAEA,4BAAQgB,QAASuG,IAAjB,eACA,4BAAQvG,QAASyG,IAAjB,kBAEA,6BAEA,wCAEI,2BAAOxG,KAAK,SAASR,MAAOtF,KAAKwE,MAAMC,IAAKY,KAAK,MAAMU,SAAU/F,KAAK0E,gBAG1E,6BAEA,uCAEI,2BAAOoB,KAAK,SAASR,MAAOtF,KAAKwE,MAAM1F,MAAOuG,KAAK,QAAQU,SAAU/F,KAAK0E,gBAG9E,6BAEA,uCAEI,2BAAOoB,KAAK,SAASR,MAAOtF,KAAKwE,MAAMuD,MAAO1C,KAAK,QAAQU,SAAU/F,KAAK0E,gBAG9E,sCAEI,2BAAOoB,KAAK,SAASR,MAAOtF,KAAKwE,MAAMwD,KAAM3C,KAAK,OAAOU,SAAU/F,KAAK0E,gBAG5E,4BAAQe,GAAG,iBAAiB3G,MAAO4G,OAAOC,WAAY5G,OAAQiB,KAAKwE,MAAMC,KAAOzE,KAAKwE,MAAM1F,MAAQ,UAhFnH,GAA6BkH,IAAMC,WCDHD,IAAMC,U,MCqDtC,SAAS2G,GAAUC,GAAK,OAAO,EAoC/B,SAAoBA,GAChB,OAGJ,SAAeA,GACX,IAAIpM,EAAGqM,EAAgBxL,EAAG8F,EAAfmE,EAAO,EAAW7H,EAAI,EAEjC,GAAImJ,GAAK,GAAM,OAAO,EACtB,GAAIA,EAAI,GAAM,OAAO,EACrB,GAAU,IAANA,EAAa,MAAO,GACpBA,EAAI,EACJpM,GAAI,GAEJA,GAAI,EACJoM,GAAKA,GAOT,IAJAC,EAAKD,EAAIA,EACTzF,EAAIyF,EAAI1L,KAAK4L,KAAK,GAAMD,GAAM3L,KAAK6L,KAAK,EAAI7L,KAAKoB,IACjDjB,EAAI8F,EAEI1D,EAAI,IAAKA,GAAQ,EAIrB,GAHA6H,EAAOnE,GAEPA,GADA9F,GAASwL,EAAKpJ,IAEL6H,EAAQ,OAAQ9K,EAAI,GAAM2G,EAAI,GAAMA,EAGjD,OAAQ3G,EAAI,EAAM,EA3BXwM,CAAMJ,GArCoBK,CAAWL,GAEhD,SAASM,GAAOC,EAAIC,GAChB,IAAIC,EAAKhM,EAAI,EAAG2C,EAAI,EAAGyI,EAAI,EAC3B,GAAiB,KAAP,EAALU,GAAe,CAGhB,GAFAE,EAAMnM,KAAK6L,KAAKK,GAEL,IAAPD,EAAY,OAAO,EAAIR,GAAUU,GAKrC,IAFAZ,EADApL,EAAIgM,EAAMnM,KAAK4L,KAAK,GAAMM,GAAQlM,KAAK6L,KAAK,EAAI7L,KAAKoB,IAErD0B,EAAI,EACGA,EAAImJ,GAEPV,GADApL,GAAS+L,EAAOpJ,EAEhBA,GAAQ,EAGZ,OAAO,GAAK2I,GAAUU,GAAOZ,GAMjC,IAFAA,EADApL,EAAIH,KAAK4L,KAAK,GAAMM,GAEpBpJ,EAAI,EACGA,EAAImJ,GAEPV,GADApL,GAAS+L,EAAOpJ,EAEhBA,GAAQ,EAGZ,OAAOyI,EChFJ,IAAMa,GAAb,kDACI,WAAYhJ,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTqD,KAAM,EACNC,QAAS,EACT0F,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,WAAY,GACZC,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,KAAM,GACNC,KAAM,GACN3K,MAAO,GACP4K,KAAM,GACNC,QAAQ,EACRC,SAAS,EACTb,IAAK,EACLc,IAAK,KAGT,EAAK1J,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKrB,OAAS,EAAKA,OAAOqB,KAAZ,gBACd,EAAK0J,YAAc,EAAKA,YAAY1J,KAAjB,gBACnB,EAAK2J,WAAa,EAAKA,WAAW3J,KAAhB,gBAClB,EAAK4J,WAAa,EAAKA,WAAW5J,KAAhB,gBAClB,EAAK6J,aAAe,EAAKA,aAAa7J,KAAlB,gBACpB,EAAK8J,aAAe,EAAKA,aAAa9J,KAAlB,gBACpB,EAAK+J,WAAa,EAAKA,WAAW/J,KAAhB,gBAClB,EAAKgK,WAAa,EAAKA,WAAWhK,KAAhB,gBAClB,EAAK0D,KAAO,EAAKA,KAAK1D,KAAV,gBACZ,EAAKiK,UAAY,EAAKA,UAAUjK,KAAf,gBACjB,EAAKkK,YAAc,EAAKA,YAAYlK,KAAjB,gBACnB,EAAKmK,aAAe,EAAKA,aAAanK,KAAlB,gBACpB,EAAKoK,eAAiB,EAAKA,eAAepK,KAApB,gBApCP,EADvB,2OA6Cc3E,KAAKqI,OA7CnB,uBA8CcrI,KAAKsD,SA9CnB,uBA+CctD,KAAK6O,cA/CnB,mIA0DQ,IAPA,IAAIvH,EAAItH,KAAKwE,MAAMqD,KACftJ,EAAIyB,KAAKwE,MAAMsD,QACfb,EAAI,GACJ+H,EAAK,GACLnC,EAAI,GACJoC,EAAK,GAEAvL,EAAI,EAAGA,EAAI4D,EAAG5D,IAAK,CACxB,IAAIwL,EAAE,qBAAiBxL,GACvBuD,EAAElG,KAAKmO,GACPF,EAAGjO,KAAK,IACRf,KAAKwE,MAAMkJ,OAAOwB,GAAMxL,EAG5B,IAAK,IAAI8I,EAAI,EAAGA,EAAIjO,EAAGiO,IAAK,CACxB,IAAI2C,EAAE,mBAAe3C,GACrBK,EAAE9L,KAAKoO,GACPF,EAAGlO,KAAK,IAERf,KAAKwE,MAAMkJ,OAAOyB,GAAM3C,EAG5BxM,KAAKwE,MAAMmJ,WAAa1G,EACxBjH,KAAKwE,MAAMoJ,YAAcoB,EACzBhP,KAAKwE,MAAMqJ,SAAWhB,EACtB7M,KAAKwE,MAAMsJ,UAAYmB,EAEvBjP,KAAKoP,gBA9Eb,+BAmFQ,IAAI9H,EAAItH,KAAKwE,MAAMqD,KACftJ,EAAIyB,KAAKwE,MAAMsD,QACfuH,EAAI,GACJC,EAAI,GACJrI,EAAIjH,KAAKwE,MAAMmJ,WACfqB,EAAKhP,KAAKwE,MAAMoJ,YAChBf,EAAI7M,KAAKwE,MAAMqJ,SACfoB,EAAKjP,KAAKwE,MAAMsJ,UAEpB,GAAIxG,EAAItH,KAAKwE,MAAMmJ,WAAW/M,OAAQ,CAClC,IAAIsO,EAAE,qBAAiB5H,EAAI,GAE3BL,EAAElG,KAAKmO,GACPF,EAAGjO,KAAK,IAERf,KAAKwE,MAAMkJ,OAAOwB,GAAM5H,EAAI,EAQhC,GALIA,EAAItH,KAAKwE,MAAMmJ,WAAW/M,SAC1BqG,EAAEqD,MACF0E,EAAG1E,OAGH/L,EAAIyB,KAAKwE,MAAMqJ,SAASjN,OAAQ,CAChC,IAAIuO,EAAE,mBAAe5Q,EAAI,GAEzBsO,EAAE9L,KAAKoO,GACPF,EAAGlO,KAAK,IAERf,KAAKwE,MAAMkJ,OAAOyB,GAAM5Q,EAAI,EAG5BA,EAAIyB,KAAKwE,MAAMqJ,SAASjN,SACxBiM,EAAEvC,MACF2E,EAAG3E,OAGP,IAAK,IAAI5G,EAAI,EAAGA,EAAI4D,EAAG5D,IAAK,CACxB2L,EAAEtO,KAAK,IACPuO,EAAEvO,KAAK,IAEP,IAAK,IAAIkD,EAAI,EAAGA,EAAI1F,EAAG0F,IAAK,CACxBoL,EAAE3L,GAAG3C,KAAK,GAEV,IAAI+C,EAAC,gBAAYJ,EAAZ,YAAiBO,GACtBqL,EAAE5L,GAAG3C,KAAK+C,GAEV9D,KAAKwE,MAAMkJ,OAAO5J,GAAK,CAACJ,EAAGO,IAKnCjE,KAAKmF,SAAS,CACVsI,OAAQ4B,EACR7B,OAAQ8B,EACR3B,WAAY1G,EACZ2G,YAAaoB,EACbnB,SAAUhB,EACViB,UAAWmB,MA7IvB,8EAkJuBxO,GAlJvB,kFAmJcT,KAAKmF,SAAL,eAAiB1E,EAAE2E,OAAOC,KAAOsH,SAASlM,EAAE2E,OAAOE,SAnJjE,OAqJQtF,KAAKsD,SACLtD,KAAK6O,cAtJb,wIAyJepO,GACP,IAAI4E,EAAO5E,EAAE2E,OAAOC,KAChBiC,EAAItH,KAAKwE,MAAMkJ,OAAOrI,GAAM,GAC5B9G,EAAIyB,KAAKwE,MAAMkJ,OAAOrI,GAAM,GAEhCrF,KAAKwE,MAAMiJ,OAAOnG,GAAG/I,GAAKgR,WAAW9O,EAAE2E,OAAOE,OAE9CtF,KAAK6O,cAEL,IAAM9E,ECvKP,SAA8BgE,EAAMC,EAAM3K,GAM7C,IAJA,IAAImM,EAAW,GACXtB,GAAS,EACTC,GAAU,EAEL1F,EAAM,EAAGA,EAAMsF,EAAKnN,OAAQ6H,IAAO,CACxC+G,EAASzO,KAAK,IAGd,IADA,IAAI0O,EAAO1B,EAAKtF,GAAOpF,EACdqM,EAAM,EAAGA,EAAM1B,EAAKpN,OAAQ8O,IAAO,CACxC,IAAI9F,EAAM6F,EAAOzB,EAAK0B,GAEjB9F,IACDsE,GAAS,GAGTtE,EAAM,IACNuE,GAAU,GAGdqB,EAAS/G,GAAK1H,MAAM6I,IAI5B,MAAO,CAAC4F,EAAUtB,EAAQC,GD8IZwB,CAAqB3P,KAAKwE,MAAMuJ,KAAM/N,KAAKwE,MAAMwJ,KAAMhO,KAAKwE,MAAMnB,OACtEuM,EC3IP,SAAgB3B,EAAMR,GAIzB,IAFA,IAAIoC,EAAM,EAEDnM,EAAI,EAAGA,EAAIuK,EAAKrN,OAAQ8C,IAC7B,IAAK,IAAIO,EAAI,EAAGA,EAAIgK,EAAKvK,GAAG9C,OAAQqD,IAAK,CACrC,IAAIxD,EAAIwN,EAAKvK,GAAGO,GACZ6L,EAAIrC,EAAO/J,GAAGO,GAEd8L,EAAO,SAAED,EAAIrP,EAAM,GAAKA,EAE5BoP,GAAOE,EACPC,QAAQC,IAAIvM,EAAGO,EAAG8L,GAI1B,OAAOF,ED2HOK,CAAOnG,EAAE,GAAI/J,KAAKwE,MAAMiJ,QAElCzN,KAAKmF,SAAS,CAAE8I,KAAMlE,EAAE,GAAImE,OAAQnE,EAAE,GAAIoE,QAASpE,EAAE,GAAIuD,IAAKsC,MArKtE,oCAyKQ5P,KAAKwE,MAAMuJ,KAAO,GAClB/N,KAAKwE,MAAMwJ,KAAO,GAElB,IAAK,IAAItK,EAAI,EAAGA,EAAI1D,KAAKwE,MAAMmJ,WAAW/M,OAAQ8C,IAC9C1D,KAAKwE,MAAMuJ,KAAKhN,KAAKf,KAAKwE,MAAMiJ,OAAO/J,GAAGyM,QAAO,SAACpG,EAAG6F,GAAJ,OAAU7F,EAAI6F,IAAG,IAGtE,IAAK,IAAIF,EAAM,EAAGA,EAAM1P,KAAKwE,MAAMqJ,SAASjN,OAAQ8O,IAAO,CAGvD,IAFA,IAAIG,EAAM,EAEDpH,EAAM,EAAGA,EAAMzI,KAAKwE,MAAMmJ,WAAW/M,OAAQ6H,IAClDoH,GAAO7P,KAAKwE,MAAMiJ,OAAOhF,GAAKiH,GAGlC1P,KAAKwE,MAAMwJ,KAAKjN,KAAK8O,GAGzB7P,KAAKwE,MAAMnB,MAAQrD,KAAKwE,MAAMuJ,KAAKoC,QAAO,SAACpG,EAAG6F,GAAJ,OAAU7F,EAAI6F,IAAG,GAE3D5P,KAAKoP,gBA5Lb,oCAgMmB,IAAD,OACN3K,GAAO,EACX,OACIzE,KAAKwE,MAAMgJ,OAAO4C,KAAI,SAACC,GAEnB,OADA5L,IAEI,4BACK,EAAKiK,WAAWjK,GAChB,EAAK8J,WAAW8B,GACjB,4BACK,EAAK7L,MAAMuJ,KAAKtJ,UA1M7C,qCAkNoB,IAAD,OACX,OACI,4BACI,2CAEIzE,KAAKwE,MAAMqJ,SAASuC,KAAI,SAAA/K,GACpB,IAAIiL,EAAM,EAAK9L,MAAMkJ,OAAOrI,GACxBvB,EAAC,mBAAewM,EAAM,GAE1B,OACI,4BACI,2BACIjL,KAAMA,EACNS,KAAK,OACLyK,YAAazM,EACbwB,MAAO,EAAKd,MAAMsJ,UAAUwC,GAC5BvK,SAAU,EAAK0I,mBAOnC,wCAzOhB,mCA+OiBhO,GACTT,KAAKsD,SAEL,IAAI+B,EAAO5E,EAAE2E,OAAOC,KAChBiL,EAAMtQ,KAAKwE,MAAMkJ,OAAOrI,GAE5BrF,KAAKwE,MAAMsJ,UAAUwC,GAAQ7P,EAAE2E,OAAOE,MAEtCtF,KAAKoP,gBAvPb,iCA2Pe3K,GACP,IAAIY,EAAOrF,KAAKwE,MAAMmJ,WAAWlJ,GAC7BX,EAAC,mBAAeW,EAAM,GAE1B,OACI,4BACI,2BACIY,KAAMA,EACNS,KAAK,OACLyK,YAAazM,EACbwB,MAAOtF,KAAKwE,MAAMoJ,YAAYnJ,GAC9BsB,SAAU/F,KAAK2O,gBAtQnC,iCA4QelO,GACPT,KAAKsD,SAEL,IAAI+B,EAAO5E,EAAE2E,OAAOC,KAChBiL,EAAMtQ,KAAKwE,MAAMkJ,OAAOrI,GAE5BrF,KAAKwE,MAAMoJ,YAAY0C,GAAQ7P,EAAE2E,OAAOE,MAExCtF,KAAKoP,gBApRb,kCAwRQ,OACI,4BACI,qCAECpP,KAAKwE,MAAMwJ,KAAKoC,KAAI,SAAAf,GACjB,OACI,4BAAKA,MAIb,4BAAKrP,KAAKwE,MAAMnB,UAlShC,iCAuSegN,GAAM,IAAD,OACZ,OACIA,EAAID,KAAI,SAAAI,GAEJ,IAAIlJ,EAAI,EAAK9C,MAAMkJ,OAAO8C,GAAM,GAC5BjS,EAAI,EAAKiG,MAAMkJ,OAAO8C,GAAM,GAEhC,OAAQ,4BACJ,2BACInL,KAAMmL,EACNC,IAAKD,EACL1K,KAAK,SACLrG,KAAK,MACLiR,IAAI,IACJpL,MAAO,EAAKd,MAAMiJ,OAAOnG,GAAG/I,GAC5BwH,SAAU,EAAKuI,mBAtTvC,uCA+TQ,OACI,4BACI,oDAECtO,KAAKwE,MAAMsJ,UAAUsC,KAAI,SAAAxG,GACtB,OACI,wBAAI+G,UAAU,YAAY/G,SArUlD,qCA4UoB,IAAD,OAEPnF,GAAO,EAEX,OACIzE,KAAKwE,MAAMyJ,KAAKmC,KAAI,SAAA3H,GAEhB,OADAhE,IACQ,4BACJ,wBAAIkM,UAAU,YAAY,EAAKnM,MAAMoJ,YAAYnJ,IAEhDgE,EAAI2H,KAAI,SAAAxG,GACL,OAAO,6BAAMA,EAAIgH,QAAQ,aAvVjD,+BA+VQ,IAAIC,EACAC,EACAC,EDnWajN,EAAGgD,ECoWhBsG,GAAMpN,KAAKwE,MAAMsD,QAAU,IAAM9H,KAAKwE,MAAMqD,KAAO,GACjDT,EAAI,GDrWOtD,ECqWMsJ,EDrWHtG,ECqWO9G,KAAKwE,MAAM8I,IDrWN,EAAMH,GAAOrJ,EAAGgD,ICyXhD,OAfI+J,EAHC7Q,KAAKwE,MAAM0J,OAGP,6BAFA,iEAML4C,EADA9Q,KAAKwE,MAAM2J,QACL,wBAAI1I,GAAG,WAAP,mDAEA,6BAINsL,EADA3J,EAAIpH,KAAKwE,MAAM4J,IACN,yEAEA,2EAIT,yBAAK3I,GAAG,SACJ,4GAEA,yBAAKA,GAAG,eACJ,sCAEI,2BACIJ,KAAK,OACLS,KAAK,SACLR,MAAOtF,KAAKwE,MAAMqD,KAClB6I,IAAI,IACJ3K,SAAU/F,KAAK0E,gBAGvB,4BAEA,yCAEI,2BACIW,KAAK,UACLS,KAAK,SACLR,MAAOtF,KAAKwE,MAAMsD,QAClB4I,IAAI,IACJ3K,SAAU/F,KAAK0E,gBAGvB,4BAEA,oDAEI,2BACIW,KAAK,MACLS,KAAK,SACLR,MAAOtF,KAAKwE,MAAM4J,IAClBsC,IAAI,IACJM,IAAI,IACJvR,KAAK,MACLsG,SAAU/F,KAAK0E,iBAK3B,4BAEA,2BAAOe,GAAG,QACN,+BACKzF,KAAKwO,eACLxO,KAAKqO,cACLrO,KAAK4O,cAId,6BAECiC,EAED,6BAEA,+BACI,+BACK7Q,KAAK+O,iBACL/O,KAAK8O,iBAIbgC,EAED,yCAAU9Q,KAAKwE,MAAM8I,KAErB,oDAA0BF,GAE1B,yCAAehG,GAEd2J,OAjcjB,GAAgC/K,IAAMC,WEKzBgL,GAAb,uKAEE,OACC,kBAAC,IAAD,CAAYC,SAAS,KACpB,kBAAC,IAAD,KAEC,kBAAC,IAAD,CAAOC,OAAK,EAAChJ,KAAK,KACjB,yBAAK1C,GAAG,QACP,yBAAK2L,MAAM,OAAO3L,GAAG,UACpB,kBAAC,IAAD,CAAM2L,MAAM,OAAOC,GAAG,WACrB,yBAAKD,MAAM,UACV,yCAKH,yBAAKA,MAAM,OAAO3L,GAAG,YACpB,kBAAC,IAAD,CAAM2L,MAAM,OAAOC,GAAG,aACrB,yBAAKD,MAAM,UAAX,cAMF,yBAAKA,MAAM,OAAO3L,GAAG,WACpB,kBAAC,IAAD,CAAM2L,MAAM,OAAOC,GAAG,YACrB,yBAAKD,MAAM,UAAX,aAMF,yBAAKA,MAAM,OAAO3L,GAAG,QACpB,kBAAC,IAAD,CAAM2L,MAAM,OAAOC,GAAG,SACrB,yBAAKD,MAAM,UAAX,UAcF,yBAAKA,MAAM,OAAO3L,GAAG,cACpB,kBAAC,IAAD,CAAM2L,MAAM,OAAOC,GAAG,eACrB,yBAAKD,MAAM,UAAX,mBAQJ,kBAAC,IAAD,CAAOjJ,KAAK,WACX,kBAAC,EAAD,OAGD,kBAAC,IAAD,CAAOA,KAAK,aACX,kBAAC,GAAD,OAGD,kBAAC,IAAD,CAAOA,KAAK,SACX,kBAAC,GAAD,OAGD,kBAAC,IAAD,CAAOA,KAAK,YACX,kBAAC,GAAD,OAOD,kBAAC,IAAD,CAAOA,KAAK,eACX,kBAAC,GAAD,aA/EN,GAA0BnC,IAAMC,WCLhCqL,IAASC,OAAO,kBAAC,GAAD,MAAUvM,SAASC,eAAe,QAClD+K,QAAQC,IAAI,Y","file":"static/js/main.e5986a30.chunk.js","sourcesContent":["let c, ctx, stop, interval, now, then, elapsed, width, height, originx, originy;\r\nlet system = [];\r\nlet trail = 'none';\r\nlet fill = false;\r\nlet show_text = false;\r\n\r\nlet largest_mass = 0;\r\n\r\nconst fps = 60;\r\nlet fpsmin = 100000;\r\nlet fpsmax = 0;\r\n\r\nlet step = 1;\r\n\r\nclass Body {\r\n\r\n    G = 6.674e-11;\r\n\r\n    constructor(mass, position, velocity, color) {\r\n        this.mass = mass;\r\n        this.position = position;\r\n        this.velocity = velocity;\r\n        this.trail = [];\r\n        this.color = color;\r\n\r\n        largest_mass = largest_mass < mass ? mass : largest_mass;\r\n    }\r\n\r\n    displacement(other) {\r\n        return ((other.position[0] - this.position[0]) ** 2 + (other.position[1] - this.position[1]) ** 2) ** 0.5\r\n    }\r\n\r\n    force(other) {\r\n        let disp = this.displacement(other)\r\n        let magnitude = this.G * ((other.mass * this.mass) / disp ** 2)\r\n        let direction = [(other.position[0] - this.position[0]) / disp, (other.position[1] - this.position[1]) / disp]\r\n\r\n        return [magnitude * direction[0], magnitude * direction[1]]\r\n    }\r\n\r\n    total(bodies) {\r\n        let final = [0, 0];\r\n\r\n        bodies.forEach(e => {\r\n            if (e !== this) {\r\n                let f = this.force(e);\r\n                final[0] += f[0];\r\n                final[1] += f[1];\r\n            }\r\n        });\r\n\r\n        return final;\r\n    }\r\n\r\n    apply(force) {\r\n        this.velocity[0] = (this.velocity[0] * this.mass + force[0] * step) / this.mass;\r\n        this.velocity[1] = (this.velocity[1] * this.mass + force[1] * step) / this.mass;\r\n    }\r\n\r\n    update() {\r\n        this.position[0] += this.velocity[0] * step;\r\n        this.position[1] += this.velocity[1] * step;\r\n\r\n        if (this.trail.length === 20) {\r\n            this.trail.shift();\r\n        }\r\n\r\n        let temp = [this.position[0], this.position[1]];\r\n        this.trail.push(temp);\r\n\r\n    }\r\n}\r\n\r\n//---------------------- Helper functions ------------------------\r\n\r\nfunction randrange(lower, upper) {\r\n    return Math.random() * (upper - lower) + lower;\r\n}\r\n\r\nfunction calculate_radius(e) {\r\n    return Math.floor(2 ** (Math.log10(e.mass) / 3))\r\n}\r\n\r\nexport function update_values(t, f, time, click, text) {\r\n    trail = t;\r\n    fill = f;\r\n    step = time;\r\n    show_text = text;\r\n\r\n    if (click) {\r\n        add_listener();\r\n    } else {\r\n        remove_listener();\r\n    }\r\n\r\n    fpsmin = 1000;\r\n    fpsmax = 0;\r\n}\r\n\r\nfunction add_listener() {\r\n    c.addEventListener('mousedown', handle_down);\r\n    c.addEventListener('mouseup', handle_up);\r\n}\r\n\r\nfunction remove_listener() {\r\n    c.removeEventListener('mousedown', handle_down);\r\n    c.removeEventListener('mouseup', handle_up);\r\n}\r\n\r\nfunction handle_down(e) {\r\n    originx = e.clientX;\r\n    originy = e.clientY;\r\n\r\n}\r\n\r\nfunction handle_up(e) {\r\n\r\n    let vel = [(e.clientX - originx) / 20, (e.clientY - originy) / 20]\r\n    system.push(new Body(\r\n        1e10,\r\n        [originx, originy],\r\n        vel,\r\n        'rgb(0, 0, 0)'\r\n    ))\r\n\r\n    draw_body(system[system.length - 1]);\r\n}\r\n\r\n//---------------------- Initialise functions --------------------------\r\n\r\nexport function init() {\r\n    c = document.getElementById(\"orbit\");\r\n    ctx = c.getContext(\"2d\");\r\n\r\n    width = c.width;\r\n    height = c.height;\r\n\r\n    stop = 1;\r\n}\r\n\r\nexport function reset(num) {\r\n    stop = 1;\r\n\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    system = [];\r\n\r\n    system.push(new Body(\r\n        1e14,\r\n        [Math.round(width / 2), Math.round(height / 2)],\r\n        [0, 0],\r\n        'rgb(0, 0, 0)'\r\n    ))\r\n\r\n    for (let i = 0; i < num; i++) {\r\n        system.push(new Body(\r\n            Math.random() * 1e10,\r\n            [randrange(0, width), randrange(0, height)],\r\n            [randrange(-5, 5), randrange(-5, 5)],\r\n            'rgb(' + (Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255)) + ')'\r\n        ))\r\n\r\n\r\n        ctx.fillStyle = system[i].color;\r\n        draw_body(system[i]);\r\n\r\n    }\r\n}\r\n\r\nexport function clear() {\r\n    system = [];\r\n    ctx.clearRect(0, 0, width, height)\r\n}\r\n\r\n\r\n// ----------------------- Draw functions ---------------------------\r\n\r\nfunction draw_body(e) {\r\n    ctx.beginPath();\r\n\r\n\r\n    ctx.arc(e.position[0], e.position[1], calculate_radius(e), 0, 2 * Math.PI);\r\n\r\n    ctx.fill();\r\n    ctx.closePath();\r\n}\r\n\r\n\r\nfunction draw_approx_trail(e) {\r\n\r\n    ctx.beginPath();\r\n\r\n    ctx.moveTo(e.trail[0], e.trail[1]);\r\n\r\n\r\n    //Code adapted from https://stackoverflow.com/questions/7054272/how-to-draw-smooth-curve-through-n-points-using-javascript-html5-canvas\r\n    //Generates an approximate curve through the trail points.\r\n\r\n    for (let i = 0; i < e.trail.length - 2; i++) {\r\n\r\n        let xc = (e.trail[i][0] + e.trail[i + 1][0]) / 2;\r\n        let yc = (e.trail[i][1] + e.trail[i + 1][1]) / 2;\r\n\r\n        ctx.quadraticCurveTo(e.trail[i][0], e.trail[i][1], xc, yc);\r\n    }\r\n\r\n    if (e.trail.length > 1) {\r\n        let n = e.trail.length - 2;\r\n\r\n        ctx.quadraticCurveTo(e.trail[n][0], e.trail[n][1], e.trail[n + 1][0], e.trail[n + 1][1]);\r\n    }\r\n\r\n    ctx.stroke();\r\n\r\n    if (fill === true) {\r\n        ctx.fill();\r\n    }\r\n\r\n    ctx.closePath();\r\n}\r\n\r\nfunction draw_exact_trail(e) {\r\n    ctx.beginPath();\r\n\r\n    ctx.moveTo(e.trail[0][0], e.trail[0][1]);\r\n\r\n    e.trail.forEach(k => {\r\n\r\n        ctx.lineTo(k[0], k[1]);\r\n    })\r\n\r\n    ctx.stroke();\r\n\r\n    if (fill === true) {\r\n        ctx.fill();\r\n    }\r\n\r\n    ctx.closePath();\r\n}\r\n\r\nfunction draw_text() {\r\n\r\n    let f = Math.round(1000 / elapsed);\r\n    fpsmax = f > fpsmax ? f : fpsmax;\r\n    fpsmin = f < fpsmin ? f : fpsmin;\r\n\r\n    ctx.font = '18px serif';\r\n    ctx.strokeStyle = 'rgb(0, 0, 0)';\r\n    ctx.fillText('fps: ' + f.toString(), 10, 20);\r\n    ctx.fillText('max: ' + fpsmax.toString(), 10, 40);\r\n    ctx.fillText('min: ' + fpsmin.toString(), 10, 60)\r\n    ctx.fillText('bodies: ' + system.length.toString(), 10, 80)\r\n}\r\n\r\n//------------------------------ Loop -------------------------------\r\n\r\nexport function rend() {\r\n    stop = stop ^ 1;\r\n    interval = 1000 / fps\r\n    then = Date.now();\r\n\r\n    draw();\r\n}\r\n\r\nfunction draw() {\r\n    if (!stop) {\r\n        requestAnimationFrame(draw);\r\n    }\r\n\r\n    now = Date.now();\r\n    elapsed = now - then;\r\n\r\n    if (elapsed > interval) {\r\n        then = now - (elapsed % interval);\r\n\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        if (show_text) {\r\n            draw_text();\r\n        }\r\n\r\n\r\n        system.forEach(e => {\r\n\r\n            ctx.globalAlpha = 1;\r\n\r\n            e.apply(e.total(system));\r\n            e.update();\r\n\r\n            ctx.strokeStyle = e.color;\r\n            ctx.fillStyle = e.color;\r\n\r\n            draw_body(e);\r\n\r\n            ctx.globalAlpha = 0.8;\r\n            ctx.lineWidth = 1;\r\n\r\n\r\n            switch (trail) {\r\n                case 'curve':\r\n                    draw_approx_trail(e);\r\n                    break;\r\n\r\n                case 'line':\r\n                    draw_exact_trail(e);\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { init, rend, reset, update_values, clear } from './orbits';\r\n\r\nexport class Orbits extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tnum: 100,\r\n\t\t\ttrail: 'none',\r\n\t\t\tfill: false,\r\n\t\t\ttime: 1,\r\n\t\t\tclick: false,\r\n\t\t\ttext: false\r\n\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n\t\tthis.handleReset = this.handleReset.bind(this);\r\n\t\tthis.handleClear = this.handleClear.bind(this);\r\n\t\tthis.handleRender = this.handleRender.bind(this);\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tinit();\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tupdate_values(\r\n\t\t\tthis.state.trail,\r\n\t\t\tthis.state.fill,\r\n\t\t\tthis.state.time,\r\n\t\t\tthis.state.click,\r\n\t\t\tthis.state.text\r\n\t\t);\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\n\r\n\thandleReset(e) {\r\n\t\treset(this.state.num);\r\n\t}\r\n\r\n\thandleClear(e) {\r\n\t\tclear();\r\n\t}\r\n\r\n\thandleCheckboxChange(e) {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked })\r\n\t}\r\n\r\n\thandleRender() {\r\n\t\trend();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"outer\">\r\n\t\t\t\t<div id='canvas'>\r\n\t\t\t\t\t<canvas id=\"orbit\" width={window.innerWidth} height={window.innerHeight / 1.5}></canvas>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button onClick={this.handleRender}>Stop/Start</button>\r\n\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tNumber of bodies\r\n\t\t\t\t\t<input name='num' type='number' value={this.state.num} onChange={this.handleChange} />\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tTrail type\r\n\t\t\t\t\t<select name='trail' value={this.state.trail} onChange={this.handleChange}>\r\n\t\t\t\t\t\t<option value=\"none\">No trail</option>\r\n\t\t\t\t\t\t<option value=\"line\">Lines</option>\r\n\t\t\t\t\t\t<option value=\"curve\">Approximate curve</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tFill curve\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"fill\"\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tchecked={this.state.fill}\r\n\t\t\t\t\t\tonChange={this.handleCheckboxChange} />\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tAdd planet on click.\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"click\"\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tchecked={this.state.click}\r\n\t\t\t\t\t\tonChange={this.handleCheckboxChange} />\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tShow details\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tchecked={this.state.text}\r\n\t\t\t\t\t\tonChange={this.handleCheckboxChange} />\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<br />\r\n\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tSimulation speed\r\n\t\t\t\t\t<input name='time' type='number' value={this.state.time} onChange={this.handleChange} />\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<br />\r\n\r\n\r\n\t\t\t\t<button onClick={this.handleReset}>Generate</button>\r\n\t\t\t\t<button onClick={this.handleClear}>Clear</button>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","class Quadtree {\r\n    constructor(boundary, capacity) {\r\n        this.boundary = boundary;\r\n        this.capacity = capacity;\r\n        this.points = [];\r\n        this.divided = false;\r\n    }\r\n\r\n    insert(point) {\r\n        if (!this.boundary.contains(point)) {\r\n            return;\r\n        }\r\n\r\n        if (this.points.length < this.capacity) {\r\n            this.points.push(point)\r\n        } else {\r\n            if (!this.divided) {\r\n                this.divide();\r\n                this.divided = true;\r\n            }\r\n\r\n            this.ne.insert(point);\r\n            this.nw.insert(point);\r\n            this.se.insert(point);\r\n            this.sw.insert(point);\r\n\r\n        }\r\n    }\r\n\r\n    divide() {\r\n        let x = this.boundary.x;\r\n        let y = this.boundary.y;\r\n        let w = this.boundary.w;\r\n        let h = this.boundary.h;\r\n\r\n        this.ne = new Quadtree(new Rect(x - (w / 2), y - (h / 2), w / 2, h / 2), this.capacity);\r\n        this.nw = new Quadtree(new Rect(x + (w / 2), y - (h / 2), w / 2, h / 2), this.capacity);\r\n        this.se = new Quadtree(new Rect(x - (w / 2), y + (h / 2), w / 2, h / 2), this.capacity);\r\n        this.sw = new Quadtree(new Rect(x + (w / 2), y + (h / 2), w / 2, h / 2), this.capacity);\r\n    }\r\n\r\n    draw() {\r\n\r\n        let x = this.boundary.x;\r\n        let y = this.boundary.y;\r\n        let w = this.boundary.w;\r\n        let h = this.boundary.h;\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(x - w, y - h, w * 2, h * 2)\r\n        ctx.closePath();\r\n\r\n\r\n        this.points.forEach(p => {\r\n            ctx.beginPath();\r\n\r\n            ctx.arc(p.x, p.y, 1, 0, Math.PI * 2)\r\n\r\n            ctx.closePath();\r\n        })\r\n        ctx.stroke();\r\n\r\n        if (this.divided) {\r\n            this.ne.draw();\r\n            this.nw.draw();\r\n            this.se.draw();\r\n            this.sw.draw();\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\n\r\nclass Point {\r\n    constructor(x, y, r) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.r = r;\r\n    }\r\n\r\n    distance_to() {\r\n\r\n    }\r\n\r\n    collides() {\r\n\r\n    }\r\n}\r\n\r\nclass Rect {\r\n    constructor(x, y, w, h) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n\r\n    contains(p) {\r\n        return (p.x > this.x - this.w && p.x < this.x + this.w &&\r\n            p.y > this.y - this.h && p.y < this.y + this.h)\r\n    }\r\n}\r\n\r\nexport function init(height) {\r\n    c = document.getElementById(\"quad\");\r\n    ctx = c.getContext(\"2d\");\r\n\r\n    boundary = new Rect(height / 2, height / 2, height / 2, height / 2);\r\n\r\n\r\n    window.addEventListener(\"click\", add_point)\r\n\r\n    draw();\r\n}\r\n\r\nfunction add_point(e) {\r\n    system.push(new Point(e.clientX, e.clientY));\r\n}\r\n\r\nfunction draw() {\r\n\r\n    tree = new Quadtree(boundary, 1)\r\n\r\n    system.forEach(e => {\r\n        tree.insert(e);\r\n    })\r\n\r\n    tree.draw();\r\n\r\n    requestAnimationFrame(draw);\r\n}\r\n\r\nlet boundary, tree, c, ctx\r\nlet system = [];","import { Maze } from './classes.js';\r\n\r\nlet c;\r\nlet ctx;\r\n\r\nlet maze;\r\n\r\nlet pixel_width;\r\nlet pixel_height;\r\n\r\nlet canvas_height;\r\nlet canvas_width;\r\n\r\nlet step;\r\nlet rows;\r\nlet columns;\r\nlet speed;\r\nlet skip;\r\n\r\nlet frontier;\r\nlet possible_nodes;\r\nlet path;\r\n\r\nlet current_position;\r\nlet stop;\r\n\r\n/** Initialise starting variables */\r\nexport function initialise() {\r\n    c = document.getElementById('maze_canvas');\r\n    ctx = c.getContext(\"2d\");\r\n\r\n    canvas_height = c.height;\r\n    canvas_width = c.width;\r\n\r\n    step = true;\r\n    columns = 25;\r\n    rows = 10;\r\n    speed = 100;\r\n    skip = 1;\r\n\r\n    ctx.lineWidth = 1;\r\n    ctx.fillStyle = \"red\";\r\n\r\n    generate_maze();\r\n}\r\n\r\n/** Generate a maze and display. */\r\nexport function generate_maze() {\r\n    stop = 1;\r\n    maze = new Maze(rows, columns);\r\n    maze.connect();\r\n\r\n    pixel_width = Math.floor(canvas_width / columns);\r\n    pixel_height = Math.floor(canvas_height / rows);\r\n\r\n    current_position = [0, 0];\r\n    frontier = [];\r\n    path = [];\r\n    possible_nodes = [];\r\n\r\n    draw();\r\n}\r\n\r\n/** Update the modifiable variables*/\r\nexport function update_values(_rows, _columns, _speed, _step, _skip) {\r\n    rows = _rows;\r\n    columns = _columns;\r\n    speed = _speed;\r\n    step = _step;\r\n    skip = _skip;\r\n}\r\n\r\n/** Stop animation */\r\nexport function end() {\r\n    stop = true;\r\n}\r\n\r\n/** Return if item is in array\r\n * @param {any} val Value to search for\r\n * @param {Array} arr Array to search through\r\n * @returns {boolean} Boolean\r\n */\r\nfunction check_in(val, arr) {\r\n    for (let k in arr) {\r\n        if (val === arr[k]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/** Depth first generation */\r\nexport async function depth_first() {\r\n    stop = false;\r\n    let n = 0;\r\n\r\n\r\n    let current_path = [maze.nodes[0][0]];\r\n    frontier = current_path;\r\n\r\n    while (current_path.length !== 0) {\r\n        if (stop) {\r\n            return;\r\n        }\r\n\r\n        let current_node = current_path[current_path.length - 1];\r\n\r\n        if (step && n % skip == 0 && current_path.length !== 0) {\r\n            current_position = [current_node.x, current_node.y];\r\n            n = 0;\r\n            await draw();\r\n        }\r\n\r\n        current_node.visited = true;\r\n        let connection = maze.connecting_walls(current_node, true);\r\n        let options = [];\r\n\r\n        connection.forEach(e => {\r\n            if (!e.visited) {\r\n                options.push(e);\r\n            }\r\n        })\r\n\r\n        if (!options.length) {\r\n            current_path.pop();\r\n        } else {\r\n            let choice = options[Math.floor(Math.random() * options.length)];\r\n\r\n            current_node.remove_wall(choice);\r\n            choice.remove_wall(current_node);\r\n\r\n            current_path.push(choice);\r\n\r\n        }\r\n\r\n        n++;\r\n\r\n    }\r\n\r\n    draw();\r\n}\r\n\r\n/** Prim's algorithm generation */\r\nexport async function prims() {\r\n    stop = 0;\r\n\r\n    let current_node;\r\n    let n = 0;\r\n\r\n    maze.nodes[0][0].visited = true;\r\n\r\n    frontier = [maze.nodes[0][1], maze.nodes[1][0]];\r\n\r\n    while (frontier.length !== 0) {\r\n        if (stop) {\r\n            return;\r\n        }\r\n\r\n        let index = Math.floor(Math.random() * frontier.length);\r\n        current_node = frontier[index];\r\n\r\n        if (step && n % skip == 0) {\r\n            current_position = [current_node.x, current_node.y];\r\n            n = 0;\r\n            await draw();\r\n        }\r\n\r\n        current_node.visited = true;\r\n\r\n        let connection = maze.connecting_walls(current_node, true);\r\n        let options = [];\r\n\r\n        connection.forEach(e => {\r\n            if (e.visited) {\r\n                options.push(e);\r\n            }\r\n        })\r\n\r\n        if (!options.length) {\r\n            frontier.splice(index, 1);\r\n        } else {\r\n            let choice = options[Math.floor(Math.random() * options.length)];\r\n\r\n            current_node.remove_wall(choice);\r\n            choice.remove_wall(current_node);\r\n\r\n            frontier.splice(index, 1);\r\n\r\n            connection.forEach(e => {\r\n                if (!e.visited && !check_in(e, frontier)) {\r\n                    frontier.push(e);\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    draw();\r\n\r\n}\r\n\r\n\r\n/** A* pathfinding algorithm */\r\nexport async function astar() {\r\n    let current_node = maze.nodes[0][0]\r\n    current_node.total_cost = 0\r\n    current_node.previous_node = -1\r\n    current_node.done = true\r\n\r\n    let n = 0;\r\n\r\n    let end_node = maze.nodes[maze.rows - 1][maze.columns - 1]\r\n\r\n    let shortest;\r\n    let newnode;\r\n    let h;\r\n    let cost;\r\n\r\n    while (true) {\r\n\r\n        if (stop) {\r\n            return;\r\n        }\r\n\r\n        if (current_node == end_node) {\r\n            let trace = end_node;\r\n            while (trace.previous_node != -1) {\r\n                path.unshift([trace.x, trace.y]);\r\n                trace = trace.previous_node;\r\n            }\r\n\r\n            path.unshift([trace.x, trace.y]);\r\n\r\n            draw();\r\n\r\n            return path, end_node.g;\r\n        }\r\n\r\n        let nodes = [];\r\n\r\n        let options = maze.connecting_walls(current_node, false);\r\n        options.forEach(e => {\r\n            if (!e.shortest_found) {\r\n                nodes.push(e)\r\n            }\r\n        })\r\n\r\n        nodes.forEach(node => {\r\n            h = Math.abs(end_node.y - node.y) + Math.abs(end_node.x - node.x)\r\n\r\n            cost = current_node.travel_cost + h * 2\r\n\r\n            if (cost < node.total_cost) {\r\n                node.total_cost = cost\r\n                node.travel_cost = current_node.travel_cost + 1\r\n                node.previous_node = current_node\r\n            }\r\n\r\n            if (!node.in_list) {\r\n                possible_nodes.push(node);\r\n                node.in_list = true;\r\n            }\r\n\r\n        })\r\n\r\n        shortest = Infinity;\r\n        newnode = null;\r\n\r\n        possible_nodes.forEach(node => {\r\n            if (!node.shortest_found) {\r\n                if (node.total_cost <= shortest) {\r\n                    newnode = node;\r\n                    shortest = node.total_cost;\r\n                }\r\n            }\r\n        })\r\n\r\n        if (newnode == null) {\r\n            return \"No route\";\r\n        }\r\n\r\n        newnode.shortest_found = true;\r\n        current_node = newnode;\r\n\r\n        if (step && n % skip === 0) {\r\n            await draw();\r\n        }\r\n\r\n        n++;\r\n    }\r\n\r\n}\r\n\r\nfunction draw() {\r\n\r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            ctx.clearRect(0, 0, canvas_width, canvas_height)\r\n\r\n            ctx.beginPath();\r\n            for (let value in frontier) {\r\n                let node = frontier[value];\r\n                ctx.rect(node.x * pixel_width, node.y * pixel_height, pixel_width, pixel_height);\r\n            }\r\n            ctx.fillStyle = \"aqua\";\r\n            ctx.fill();\r\n            ctx.closePath();\r\n\r\n            if (path.length !== 0) {\r\n                ctx.beginPath();\r\n                ctx.strokeStyle = \"red\";\r\n                let prev = [0, 0]\r\n\r\n                ctx.moveTo(pixel_width * (prev[0] + 0.5), pixel_height * (prev[1] + 0.5))\r\n\r\n                path.forEach(coord => {\r\n                    ctx.lineTo(pixel_width * (coord[0] + 0.5), pixel_height * (coord[1] + 0.5))\r\n                })\r\n\r\n                ctx.stroke();\r\n                ctx.closePath();\r\n\r\n            } else {\r\n                ctx.beginPath();\r\n                possible_nodes.forEach(node => {\r\n                    if (node.shortest_found == true) {\r\n                        ctx.rect(node.x * pixel_width, node.y * pixel_height, pixel_width, pixel_height);\r\n                    }\r\n                })\r\n\r\n                ctx.fillStyle = \"lime\";\r\n                ctx.fill();\r\n                ctx.closePath();\r\n\r\n                ctx.beginPath();\r\n                possible_nodes.forEach(e => {\r\n                    if (e.shortest_found == false) {\r\n                        ctx.rect(e.x * pixel_width, e.y * pixel_height, pixel_width, pixel_height);\r\n                    }\r\n                })\r\n\r\n                ctx.fillStyle = \"aqua\";\r\n                ctx.fill();\r\n\r\n                ctx.closePath();\r\n            }\r\n\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = \"black\";\r\n\r\n            let node;\r\n\r\n            for (let row = 0; row < maze.rows; row++) {\r\n\r\n                for (let column = 0; column < maze.columns; column++) {\r\n\r\n                    node = maze.nodes[row][column]\r\n\r\n                    node.connections.forEach(e => {\r\n                        let id = e[0]\r\n                        let wall = e[2]\r\n\r\n                        let x = pixel_width * node.x;\r\n                        let y = pixel_height * node.y;;\r\n\r\n                        if (wall) {\r\n                            switch (id) {\r\n                                case 0:\r\n                                    ctx.moveTo(x, y);\r\n                                    ctx.lineTo(x + pixel_width, y);\r\n                                    break;\r\n\r\n                                case 1:\r\n                                    ctx.moveTo(x + pixel_width, y);\r\n                                    ctx.lineTo(x + pixel_width, y + pixel_height);\r\n                                    break;\r\n\r\n                                case 2:\r\n                                    ctx.moveTo(x + pixel_width, y + pixel_height);\r\n                                    ctx.lineTo(x, y + pixel_height);\r\n                                    break;\r\n\r\n                                case 3:\r\n                                    ctx.moveTo(x, y + pixel_height);\r\n                                    ctx.lineTo(x, y);\r\n                                    break;\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n            }\r\n\r\n            ctx.rect(0, 0, maze.columns * pixel_width, maze.rows * pixel_height);\r\n\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n            ctx.beginPath();\r\n            ctx.rect(current_position[0] * pixel_width, current_position[1] * pixel_height, pixel_width, pixel_height);\r\n            ctx.fillStyle = \"red\";\r\n            ctx.fill();\r\n            ctx.closePath();\r\n\r\n            resolve(\"Drawn\");\r\n        }, speed)\r\n\r\n    })\r\n}\r\n","import React from 'react';\r\nimport { init } from './quadtree';\r\n\r\nexport class Quadtree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        init(window.innerHeight);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas id=\"quad\" width={window.innerHeight} height={window.innerHeight}></canvas>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","/**Maze Class*/\r\nexport class Maze {\r\n    /** \r\n    * @param {Int} rows number of rows\r\n    * @param {Int} columns number of columns\r\n    */\r\n    constructor(rows, columns) {\r\n        this.columns = columns;\r\n        this.rows = rows;\r\n\r\n        this.nodes = [];\r\n        this.generate();\r\n    }\r\n\r\n    /**Generate the maze structure and insert generic nodes.*/\r\n    generate() {\r\n\r\n        for (let row = 0; row < this.rows; row++) {\r\n            this.nodes.push([]);\r\n\r\n            for (let column = 0; column < this.columns; column++) {\r\n                this.nodes[row].push(new Node(column, row));\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Assign all the connections each node has */\r\n    connect() {\r\n        let current;\r\n\r\n        for (let row = 0; row < this.rows; row++) {\r\n\r\n            for (let column = 0; column < this.columns; column++) {\r\n                current = this.nodes[row][column];\r\n                let id = 0;\r\n\r\n                //North\r\n                if (row !== 0) {\r\n                    current.connections.push([id, this.nodes[row - 1][column], true]);\r\n                }\r\n\r\n                id++;\r\n\r\n                //East\r\n                if (column !== this.columns - 1) {\r\n                    current.connections.push([id, this.nodes[row][column + 1], true]);\r\n                }\r\n\r\n                id++;\r\n\r\n                //South\r\n                if (row !== this.rows - 1) {\r\n                    current.connections.push([id, this.nodes[row + 1][column], true]);\r\n                }\r\n\r\n                id++;\r\n\r\n                //West\r\n                if (column !== 0) {\r\n                    current.connections.push([id, this.nodes[row][column - 1], true]);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Return all existing/nonexistant walls adjactent to current node\r\n     * @param {Node} current_node The targeted node\r\n     * @param {Boolean} state If the wall exists or not\r\n     * @returns {Array<Node>} Adjacent nodes with a wall inbetween \r\n     */\r\n    connecting_walls(current_node, state) {\r\n        const nodes = [];\r\n        current_node.connections.forEach(e => {\r\n            if (e[2] == state) {\r\n                nodes.push(e[1]);\r\n            }\r\n        })\r\n\r\n        return nodes;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class Node {\r\n    constructor(x, y) {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        /** [id, node, wall] */\r\n        this.connections = [];\r\n\r\n        //Maze generation\r\n        this.visited = false;\r\n\r\n        //Pathfinding\r\n        this.travel_cost = 0;\r\n        this.shortest_found = false;\r\n        this.in_list = false;\r\n        this.previous_node = null;\r\n        this.total_cost = Infinity;\r\n    }\r\n\r\n    remove_wall(node) {\r\n        this.connections.forEach(option => {\r\n            if (option[1] == node) {\r\n                option[2] = false;\r\n                return;\r\n            }\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { initialise, update_values, end, generate_maze, depth_first, prims, astar } from './main'\r\n\r\nexport class Maze extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            width: 25,\r\n            height: 10,\r\n            speed: 100,\r\n            skip: 1,\r\n            step: true\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        initialise();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleUpdate();\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleUpdate() {\r\n        update_values(\r\n            this.state.height,\r\n            this.state.width,\r\n            this.state.speed,\r\n            this.state.step,\r\n            this.state.skip\r\n        )\r\n    }\r\n\r\n    handleCheckboxChange(e) {\r\n        this.setState({ [e.target.name]: e.target.checked })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"outer\">\r\n                <h1>Maze</h1>\r\n\r\n                <button onClick={generate_maze}>Generate</button>\r\n\r\n                <button onClick={depth_first}>Depth first</button>\r\n                <button onClick={prims}>Prims</button>\r\n\r\n                <button onClick={astar}>A*</button>\r\n\r\n\r\n                <button onClick={end}>Stop</button>\r\n\r\n                <br />\r\n\r\n                <label>\r\n                    Width\r\n                    <input\r\n                        name=\"width\"\r\n                        type=\"number\"\r\n                        value={this.state.width}\r\n                        onChange={this.handleChange} />\r\n                </label>\r\n\r\n                <br />\r\n\r\n                <label>\r\n                    Height\r\n                    <input\r\n                        name=\"height\"\r\n                        type=\"number\"\r\n                        value={this.state.height}\r\n                        onChange={this.handleChange} />\r\n                </label>\r\n\r\n                <br />\r\n\r\n                <label>\r\n                    Speed\r\n                    <input\r\n                        name=\"speed\"\r\n                        type=\"number\"\r\n                        value={this.state.speed}\r\n                        onChange={this.handleChange} />\r\n                </label>\r\n\r\n                <br />\r\n\r\n                <label>\r\n                    Skip\r\n                    <input\r\n                        name=\"skip\"\r\n                        type=\"number\"\r\n                        value={this.state.skip}\r\n                        onChange={this.handleChange} />\r\n                </label>\r\n\r\n                <br />\r\n\r\n                <label>\r\n                    Show creation\r\n\t\t\t\t\t<input\r\n                        name=\"step\"\r\n                        type=\"checkbox\"\r\n                        checked={this.state.step}\r\n                        onChange={this.handleCheckboxChange} />\r\n                </label>\r\n\r\n                <canvas id=\"maze_canvas\" width={window.innerWidth / 1.025} height={Math.round(window.innerHeight / 1.35)}></canvas>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","let c, ctx, height, width, arr, num, stop, speed, skip, bar_width;\r\n\r\nfunction randomise() {\r\n    arr = [];\r\n\r\n    for (let i = 0; i < num; i++) {\r\n        arr.push(randrange(5, width));\r\n    }\r\n}\r\n\r\nexport function init() {\r\n    c = document.getElementById('sorting_canvas');\r\n    ctx = c.getContext(\"2d\");\r\n    height = c.height;\r\n    width = c.width;\r\n    stop = 0;\r\n    speed = 10;\r\n    skip = 1;\r\n}\r\n\r\nexport function reset() {\r\n    stop = 1;\r\n    randomise();\r\n\r\n    let t = speed;\r\n    speed = 0;\r\n    draw();\r\n    speed = t;\r\n\r\n}\r\n\r\nexport function update(n, s, k, w) {\r\n    num = n;\r\n    speed = s;\r\n    skip = k;\r\n    bar_width = parseInt(w);\r\n    height = c.height;\r\n\r\n    draw();\r\n}\r\n\r\nfunction randrange(low, high) {\r\n    return Math.floor(Math.random() * (high - low + 1) + low);\r\n}\r\n\r\nfunction draw() {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            ctx.clearRect(0, 0, width, height);\r\n\r\n            ctx.beginPath();\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n\r\n                ctx.rect(0, (i * (bar_width + 2)), arr[i], bar_width);\r\n            }\r\n\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n            resolve(\"done drawing\");\r\n        }, speed)\r\n    })\r\n}\r\n\r\nexport async function bubble_sort() {\r\n    stop = 0;\r\n    let n = 0;\r\n\r\n    //For each loop\r\n    for (let i = 0; i < arr.length; i++) {\r\n        //For remaining items\r\n        for (let k = 0; k < arr.length - 1 - i; k++) {\r\n\r\n            if (arr[k] > arr[k + 1]) {\r\n\r\n                arr = swap(arr, k, k + 1)\r\n\r\n                if (n % skip == 0) {\r\n                    n = 0;\r\n                    await draw();\r\n                }\r\n\r\n                if (stop) {\r\n                    return\r\n                }\r\n\r\n                n++;\r\n            }\r\n        }\r\n    }\r\n\r\n    draw();\r\n}\r\n\r\nexport async function selection_sort() {\r\n\r\n    let n = 0;\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let maxidx = 0;\r\n\r\n        for (let k = 0; k < arr.length - i; k++) {\r\n            if (arr[maxidx] < arr[k]) {\r\n                maxidx = k;\r\n            }\r\n        }\r\n\r\n        arr = swap(arr, arr.length - i - 1, maxidx);\r\n\r\n        if (n % skip == 0) {\r\n            n = 0;\r\n            await draw();\r\n        }\r\n\r\n        n++;\r\n\r\n    }\r\n\r\n    draw();\r\n}\r\n\r\nfunction swap(a, i, j) {\r\n    let temp = a[i];\r\n    a[i] = a[j];\r\n    a[j] = temp;\r\n\r\n    return a;\r\n}","import React from 'react';\r\nimport { update, reset, init, bubble_sort, selection_sort, quick_sort } from './sorting';\r\n\r\nexport class Sorting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            num: 100,\r\n            speed: 10,\r\n            skip: 1,\r\n            width: 3\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        init();\r\n        this.handleUpdate();\r\n        reset();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleUpdate();\r\n    }\r\n\r\n    handleUpdate() {\r\n        update(\r\n            this.state.num,\r\n            this.state.speed,\r\n            this.state.skip,\r\n            this.state.width\r\n        );\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleReset(e) {\r\n        reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"outer\">\r\n                <h1>Sorting Algorithms</h1>\r\n                <button onClick={this.handleReset}>Reset</button>\r\n\r\n                <br />\r\n\r\n                <button onClick={bubble_sort}>Bubble Sort</button>\r\n                <button onClick={selection_sort}>Selection Sort</button>\r\n\r\n                <br />\r\n\r\n                <label>\r\n                    Number\r\n                    <input type=\"number\" value={this.state.num} name=\"num\" onChange={this.handleChange}></input>\r\n                </label>\r\n\r\n                <br />\r\n\r\n                <label>\r\n                    Width\r\n                    <input type=\"number\" value={this.state.width} name=\"width\" onChange={this.handleChange}></input>\r\n                </label>\r\n\r\n                <br />\r\n\r\n                <label>\r\n                    Speed\r\n                    <input type=\"number\" value={this.state.speed} name=\"speed\" onChange={this.handleChange} />\r\n                </label>\r\n\r\n                <label>\r\n                    Skip\r\n                    <input type=\"number\" value={this.state.skip} name=\"skip\" onChange={this.handleChange} />\r\n                </label>\r\n\r\n                <canvas id=\"sorting_canvas\" width={window.innerWidth} height={this.state.num * (this.state.width + 2)}></canvas>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class Collisions extends React.Component {\r\n    render() {\r\n        return (<h1>Collisions</h1>)\r\n    }\r\n}","//https://github.com/rhardin/node-statistics2/blob/master/lib/statistics2.js\r\n\r\nexport function pchi2dist(n, y) { return pchi2(n, 1.0 - y); }\r\nexport function chi2dist(n, x) { return 1.0 - q_chi2(n, x); }\r\n\r\nfunction pchi2(n, y) {\r\n    var w, eps, v, s, qe;\r\n\r\n    if (n === 1) {\r\n        w = pnorm(1 - y / 2);\r\n        return w * w;\r\n    } else if (n === 2) {\r\n        return -2.0 * Math.log(y);\r\n    }\r\n\r\n    eps = 1.0e-5;\r\n    v = 0.0;\r\n    s = 10.0;\r\n    while (true) {\r\n        v = v + 2;\r\n\r\n        if (s <= eps) { break; }\r\n        if ((qe = q_chi2(n, v) - y) === 0.0) { break; }\r\n        if (qe < 0.0) {\r\n            v = v - s;\r\n            s = s / 10.0;\r\n        }\r\n    }\r\n    return v;\r\n}\r\n\r\nfunction pnorm(qn) {\r\n    var b = [1.570796288, 0.03706987906, -0.8364353589e-3,\r\n        -0.2250947176e-3, 0.6841218299e-5, 0.5824238515e-5,\r\n        -0.104527497e-5, 0.8360937017e-7, -0.3231081277e-8,\r\n        0.3657763036e-10, 0.6936233982e-12],\r\n        w1 = qn,\r\n        w3 = -Math.log(4.0 * w1 * (1.0 - w1)),\r\n        i = 1;\r\n\r\n    if (qn < 0.0 || qn > 1.0) { return 0.0; }\r\n    if (qn === 0.5) { return 0.0; }\r\n    if (qn > 0.5) { w1 = 1.0 - w1; }\r\n\r\n    w1 = b[0];\r\n    for (i; i < 11; i++) {\r\n        w1 += b[i] * Math.pow(w3, i);\r\n    }\r\n\r\n    if (qn > 0.5) { return Math.sqrt(w1 * w3); }\r\n\r\n    return -Math.sqrt(w1 * w3);\r\n}\r\n\r\n\r\nfunction normal__x(z) { return 1.0 - normaldist(z); }\r\n\r\nfunction q_chi2(df, chi2) {\r\n    var chi, t = 0, k = 0, s = 0;\r\n    if ((df & 1) !== 0) {\r\n        chi = Math.sqrt(chi2);\r\n\r\n        if (df === 1) { return 2 * normal__x(chi); }\r\n\r\n        t = chi * Math.exp(-0.5 * chi2) / Math.sqrt(2 * Math.PI);\r\n        s = t;\r\n        k = 3;\r\n        while (k < df) {\r\n            t = t * (chi2 / k);\r\n            s = s + t;\r\n            k = k + 2;\r\n        }\r\n\r\n        return 2 * (normal__x(chi) + s);\r\n    }\r\n\r\n    t = Math.exp(-0.5 * chi2);\r\n    s = t;\r\n    k = 2;\r\n    while (k < df) {\r\n        t = t * (chi2 / k);\r\n        s = s + t;\r\n        k = k + 2;\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\n\r\n\r\n\r\nfunction normaldist(z) {\r\n    return p_nor(z);\r\n}\r\n\r\nfunction p_nor(z) {\r\n    var e, z2, prev = 0.0, t, p, i = 3;\r\n\r\n    if (z < -12) { return 0.0; }\r\n    if (z > 12) { return 1.0; }\r\n    if (z === 0.0) { return 0.5; }\r\n    if (z > 0) {\r\n        e = true;\r\n    } else {\r\n        e = false;\r\n        z = -z;\r\n    }\r\n\r\n    z2 = z * z;\r\n    p = z * Math.exp(-0.5 * z2) / Math.sqrt(2 * Math.PI);\r\n    t = p;\r\n\r\n    for (i; i < 200; i = i + 2) {\r\n        prev = p;\r\n        t = t * (z2 / i);\r\n        p = p + t;\r\n        if (p <= prev) { return (e ? 0.5 + p : 0.5 - p); }\r\n    }\r\n\r\n    return (e ? 1.0 : 0.0);\r\n}","import React from 'react';\r\nimport './chisquared.css';\r\nimport { expected_frequencies, chi_sq } from './chisquared';\r\nimport { chi2dist } from './pvalue';\r\n\r\nexport class ChiSquared extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            rows: 2,\r\n            columns: 2,\r\n            inputs: [],\r\n            values: [],\r\n            lookup: {},\r\n            horizontal: [],\r\n            horizontalv: [],\r\n            vertical: [],\r\n            verticalv: [],\r\n            sumh: [],\r\n            sumv: [],\r\n            total: [],\r\n            freq: [],\r\n            enough: false,\r\n            warning: true,\r\n            chi: 0,\r\n            sig: 0.05\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.renderTable = this.renderTable.bind(this);\r\n        this.dataChange = this.dataChange.bind(this);\r\n        this.renderData = this.renderData.bind(this);\r\n        this.renderHeader = this.renderHeader.bind(this);\r\n        this.headerChange = this.headerChange.bind(this);\r\n        this.renderLeft = this.renderLeft.bind(this);\r\n        this.leftChange = this.leftChange.bind(this);\r\n        this.init = this.init.bind(this);\r\n        this.footerSum = this.footerSum.bind(this);\r\n        this.totalUpdate = this.totalUpdate.bind(this);\r\n        this.expectedBody = this.expectedBody.bind(this);\r\n        this.expectedHeader = this.expectedHeader.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.init();\r\n        await this.update();\r\n        await this.totalUpdate();\r\n    }\r\n\r\n    init() {\r\n        let r = this.state.rows;\r\n        let c = this.state.columns;\r\n        let h = [];\r\n        let hv = [];\r\n        let z = [];\r\n        let zv = [];\r\n\r\n        for (let i = 0; i < r; i++) {\r\n            let hn = `horizontal-${i}`;\r\n            h.push(hn);\r\n            hv.push(\"\");\r\n            this.state.lookup[hn] = i;\r\n        }\r\n\r\n        for (let j = 0; j < c; j++) {\r\n            let zn = `vertical-${j}`;\r\n            z.push(zn)\r\n            zv.push(\"\")\r\n\r\n            this.state.lookup[zn] = j;\r\n        }\r\n\r\n        this.state.horizontal = h;\r\n        this.state.horizontalv = hv;\r\n        this.state.vertical = z;\r\n        this.state.verticalv = zv;\r\n\r\n        this.forceUpdate();\r\n\r\n    }\r\n\r\n    update() {\r\n        let r = this.state.rows;\r\n        let c = this.state.columns;\r\n        let v = [];\r\n        let l = [];\r\n        let h = this.state.horizontal;\r\n        let hv = this.state.horizontalv;\r\n        let z = this.state.vertical;\r\n        let zv = this.state.verticalv;\r\n\r\n        if (r > this.state.horizontal.length) {\r\n            let hn = `horizontal-${r - 1}`;\r\n\r\n            h.push(hn);\r\n            hv.push(\"\");\r\n\r\n            this.state.lookup[hn] = r - 1;\r\n        }\r\n\r\n        if (r < this.state.horizontal.length) {\r\n            h.pop();\r\n            hv.pop();\r\n        }\r\n\r\n        if (c > this.state.vertical.length) {\r\n            let zn = `vertical-${c - 1}`;\r\n\r\n            z.push(zn);\r\n            zv.push(\"\");\r\n\r\n            this.state.lookup[zn] = c - 1;\r\n        }\r\n\r\n        if (c < this.state.vertical.length) {\r\n            z.pop();\r\n            zv.pop();\r\n        }\r\n\r\n        for (let i = 0; i < r; i++) {\r\n            v.push([]);\r\n            l.push([]);\r\n\r\n            for (let k = 0; k < c; k++) {\r\n                v[i].push(0);\r\n\r\n                let n = `input-${i}-${k}`;\r\n                l[i].push(n);\r\n\r\n                this.state.lookup[n] = [i, k];\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({\r\n            values: v,\r\n            inputs: l,\r\n            horizontal: h,\r\n            horizontalv: hv,\r\n            vertical: z,\r\n            verticalv: zv\r\n        })\r\n\r\n    }\r\n\r\n    async handleChange(e) {\r\n        await this.setState({ [e.target.name]: parseInt(e.target.value) })\r\n\r\n        this.update();\r\n        this.totalUpdate();\r\n    }\r\n\r\n    dataChange(e) {\r\n        let name = e.target.name;\r\n        let r = this.state.lookup[name][0];\r\n        let c = this.state.lookup[name][1];\r\n\r\n        this.state.values[r][c] = parseFloat(e.target.value);\r\n\r\n        this.totalUpdate();\r\n\r\n        const a = expected_frequencies(this.state.sumh, this.state.sumv, this.state.total);\r\n        const b = chi_sq(a[0], this.state.values);\r\n\r\n        this.setState({ freq: a[0], enough: a[1], warning: a[2], chi: b });\r\n    }\r\n\r\n    totalUpdate() {\r\n        this.state.sumh = [];\r\n        this.state.sumv = [];\r\n\r\n        for (let i = 0; i < this.state.horizontal.length; i++) {\r\n            this.state.sumh.push(this.state.values[i].reduce((a, b) => a + b, 0))\r\n        }\r\n\r\n        for (let col = 0; col < this.state.vertical.length; col++) {\r\n            let sum = 0\r\n\r\n            for (let row = 0; row < this.state.horizontal.length; row++) {\r\n                sum += this.state.values[row][col];\r\n            }\r\n\r\n            this.state.sumv.push(sum)\r\n        }\r\n\r\n        this.state.total = this.state.sumh.reduce((a, b) => a + b, 0);\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n\r\n    renderTable() {\r\n        let num = -1;\r\n        return (\r\n            this.state.inputs.map((inp) => {\r\n                num++;\r\n                return (\r\n                    <tr>\r\n                        {this.renderLeft(num)}\r\n                        {this.renderData(inp)}\r\n                        <td>\r\n                            {this.state.sumh[num]}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <tr>\r\n                <td>Chi Squared</td>\r\n                {\r\n                    this.state.vertical.map(name => {\r\n                        let pos = this.state.lookup[name];\r\n                        let n = `Category ${pos + 1}`\r\n\r\n                        return (\r\n                            <td>\r\n                                <input\r\n                                    name={name}\r\n                                    type=\"text\"\r\n                                    placeholder={n}\r\n                                    value={this.state.verticalv[pos]}\r\n                                    onChange={this.headerChange}\r\n                                />\r\n                            </td>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <td>Total</td>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n\r\n    headerChange(e) {\r\n        this.update();\r\n\r\n        let name = e.target.name;\r\n        let pos = this.state.lookup[name];\r\n\r\n        this.state.verticalv[pos] = (e.target.value);\r\n\r\n        this.forceUpdate();\r\n\r\n    }\r\n\r\n    renderLeft(num) {\r\n        let name = this.state.horizontal[num];\r\n        let n = `Category ${num + 1}`\r\n\r\n        return (\r\n            <td>\r\n                <input\r\n                    name={name}\r\n                    type=\"text\"\r\n                    placeholder={n}\r\n                    value={this.state.horizontalv[num]}\r\n                    onChange={this.leftChange}\r\n                />\r\n            </td>\r\n        )\r\n    }\r\n\r\n    leftChange(e) {\r\n        this.update();\r\n\r\n        let name = e.target.name;\r\n        let pos = this.state.lookup[name];\r\n\r\n        this.state.horizontalv[pos] = (e.target.value);\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    footerSum() {\r\n        return (\r\n            <tr>\r\n                <td>Total</td>\r\n\r\n                {this.state.sumv.map(v => {\r\n                    return (\r\n                        <td>{v}</td>\r\n                    )\r\n                })}\r\n\r\n                <td>{this.state.total}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    renderData(inp) {\r\n        return (\r\n            inp.map(data => {\r\n\r\n                let r = this.state.lookup[data][0];\r\n                let c = this.state.lookup[data][1];\r\n\r\n                return (<td>\r\n                    <input\r\n                        name={data}\r\n                        key={data}\r\n                        type=\"number\"\r\n                        step=\"any\"\r\n                        min=\"0\"\r\n                        value={this.state.values[r][c]}\r\n                        onChange={this.dataChange}\r\n                    />\r\n                </td>)\r\n\r\n            })\r\n        )\r\n    }\r\n\r\n    expectedHeader() {\r\n        return (\r\n            <tr>\r\n                <td>Expected Frequencies</td>\r\n\r\n                {this.state.verticalv.map(val => {\r\n                    return (\r\n                        <td className=\"category\">{val}</td>\r\n                    )\r\n                })}\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    expectedBody() {\r\n\r\n        let num = -1\r\n\r\n        return (\r\n            this.state.freq.map(row => {\r\n                num++;\r\n                return (<tr>\r\n                    <td className=\"category\">{this.state.horizontalv[num]}</td>\r\n\r\n                    {row.map(val => {\r\n                        return <td>{+val.toFixed(9)}</td>\r\n                    })}\r\n                </tr>)\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let en;\r\n        let war;\r\n        let result;\r\n        let df = (this.state.columns - 1) * (this.state.rows - 1);\r\n        const p = 1 - chi2dist(df, this.state.chi);\r\n\r\n        if (!this.state.enough) {\r\n            en = <h2>Not enough data fields filled in.</h2>\r\n        } else {\r\n            en = <h2></h2>\r\n        }\r\n\r\n        if (this.state.warning) {\r\n            war = <h3 id=\"warning\">WARNING: Some expected frequencies are below 5.</h3>\r\n        } else {\r\n            war = <h1></h1>\r\n        }\r\n\r\n        if (p < this.state.sig) {\r\n            result = <h3>There is sufficient evidence to reject H0</h3>\r\n        } else {\r\n            result = <h3>There is insufficient evidence to reject H0</h3>\r\n        }\r\n\r\n        return (\r\n            <div id=\"outer\">\r\n                <h4>Please only increment/decrement the row and column by one else it will break</h4>\r\n\r\n                <div id=\"input-boxes\">\r\n                    <label>\r\n                        Rows\r\n                        <input\r\n                            name=\"rows\"\r\n                            type=\"number\"\r\n                            value={this.state.rows}\r\n                            min=\"1\"\r\n                            onChange={this.handleChange} />\r\n                    </label>\r\n\r\n                    <p />\r\n\r\n                    <label>\r\n                        Columns\r\n                        <input\r\n                            name=\"columns\"\r\n                            type=\"number\"\r\n                            value={this.state.columns}\r\n                            min=\"1\"\r\n                            onChange={this.handleChange} />\r\n                    </label>\r\n\r\n                    <p />\r\n\r\n                    <label>\r\n                        Significance level\r\n                        <input\r\n                            name=\"sig\"\r\n                            type=\"number\"\r\n                            value={this.state.sig}\r\n                            min=\"0\"\r\n                            max=\"1\"\r\n                            step=\"any\"\r\n                            onChange={this.handleChange} />\r\n                    </label>\r\n                </div>\r\n\r\n\r\n                <p />\r\n\r\n                <table id=\"base\">\r\n                    <tbody>\r\n                        {this.renderHeader()}\r\n                        {this.renderTable()}\r\n                        {this.footerSum()}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <br />\r\n\r\n                {en}\r\n\r\n                <br />\r\n\r\n                <table>\r\n                    <tbody>\r\n                        {this.expectedHeader()}\r\n                        {this.expectedBody()}\r\n                    </tbody>\r\n                </table>\r\n\r\n                {war}\r\n\r\n                <h3>χ2 = {this.state.chi}</h3>\r\n\r\n                <h3>Degrees of freedom - {df}</h3>\r\n\r\n                <h3>P value - {p}</h3>\r\n\r\n                {result}\r\n            </div>\r\n        )\r\n    }\r\n}","export function expected_frequencies(sumh, sumv, total) {\r\n\r\n    let expected = [];\r\n    let enough = true;\r\n    let warning = false;\r\n\r\n    for (let row = 0; row < sumh.length; row++) {\r\n        expected.push([]);\r\n\r\n        let frac = sumh[row] / total\r\n        for (let col = 0; col < sumv.length; col++) {\r\n            let val = frac * sumv[col];\r\n\r\n            if (!val) {\r\n                enough = false;\r\n            }\r\n\r\n            if (val < 5) {\r\n                warning = true;\r\n            }\r\n\r\n            expected[row].push(+val);\r\n        }\r\n    }\r\n\r\n    return [expected, enough, warning];\r\n\r\n}\r\n\r\nexport function chi_sq(freq, values) {\r\n\r\n    let sum = 0\r\n\r\n    for (let i = 0; i < freq.length; i++) {\r\n        for (let k = 0; k < freq[i].length; k++) {\r\n            let e = freq[i][k];\r\n            let o = values[i][k];\r\n\r\n            let cont = ((o - e) ** 2) / e\r\n\r\n            sum += cont\r\n            console.log(i, k, cont)\r\n        }\r\n    }\r\n\r\n    return sum\r\n}","import React from \"react\";\r\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport './main.css'\r\nimport { Orbits } from \"./projects/orbits/orbits.jsx\";\r\nimport { Quadtree } from \"./projects/quadtree/quadtree.jsx\";\r\nimport { Maze } from \"./projects/maze/maze.jsx\";\r\nimport { Sorting } from \"./projects/sorting/sorting.jsx\";\r\nimport { Collisions } from \"./projects/collsions/collisions.jsx\";\r\nimport { ChiSquared } from \"./projects/chisquared/chisquared.jsx\";\r\n\r\nexport class Main extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<HashRouter basename=\"/\">\r\n\t\t\t\t<Switch>\r\n\r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t<div id='main'>\r\n\t\t\t\t\t\t\t<div class='tile' id='orbits'>\r\n\t\t\t\t\t\t\t\t<Link class=\"link\" to=\"/orbits\">\r\n\t\t\t\t\t\t\t\t\t<div class='inside'>\r\n\t\t\t\t\t\t\t\t\t\t<h1>Orbits</h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class='tile' id='quadtree'>\r\n\t\t\t\t\t\t\t\t<Link class=\"link\" to=\"/quadtree\">\r\n\t\t\t\t\t\t\t\t\t<div class='inside'>\r\n\t\t\t\t\t\t\t\t\t\tquadtree\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class='tile' id='sorting'>\r\n\t\t\t\t\t\t\t\t<Link class=\"link\" to=\"/sorting\">\r\n\t\t\t\t\t\t\t\t\t<div class='inside'>\r\n\t\t\t\t\t\t\t\t\t\tSorting\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class='tile' id='maze'>\r\n\t\t\t\t\t\t\t\t<Link class=\"link\" to=\"/maze\">\r\n\t\t\t\t\t\t\t\t\t<div class='inside'>\r\n\t\t\t\t\t\t\t\t\t\tMaze\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/* <div class='tile' id='collisions'>\r\n\t\t\t\t\t\t\t\t<Link class=\"link\" to=\"/collisions\">\r\n\t\t\t\t\t\t\t\t\t<div class='inside'>\r\n\t\t\t\t\t\t\t\t\t\tCollisions\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t<div class='tile' id='chisquared'>\r\n\t\t\t\t\t\t\t\t<Link class=\"link\" to=\"/chisquared\">\r\n\t\t\t\t\t\t\t\t\t<div class='inside'>\r\n\t\t\t\t\t\t\t\t\t\tChi Squared\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/orbits\">\r\n\t\t\t\t\t\t<Orbits />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/quadtree\">\r\n\t\t\t\t\t\t<Quadtree />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/maze\">\r\n\t\t\t\t\t\t<Maze />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/sorting\">\r\n\t\t\t\t\t\t<Sorting />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t{/* <Route path=\"/collisions\">\r\n\t\t\t\t\t\t<Collisions />\r\n\t\t\t\t\t</Route> */}\r\n\r\n\t\t\t\t\t<Route path=\"/chisquared\">\r\n\t\t\t\t\t\t<ChiSquared />\r\n\t\t\t\t\t</Route>\r\n\r\n\r\n\r\n\t\t\t\t</Switch>\r\n\t\t\t</HashRouter>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Main } from \"./Main.jsx\";\n\nReactDOM.render(<Main />, document.getElementById(\"app\"));\nconsole.log(\"Loaded\")"],"sourceRoot":""}